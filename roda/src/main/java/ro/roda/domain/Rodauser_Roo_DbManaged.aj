// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ro.roda.domain;

import java.util.Set;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.validation.constraints.NotNull;
import ro.roda.domain.AuditLogChangeset;
import ro.roda.domain.AuthData;
import ro.roda.domain.Catalog;
import ro.roda.domain.CmsPage;
import ro.roda.domain.Instance;
import ro.roda.domain.InstanceKeyword;
import ro.roda.domain.News;
import ro.roda.domain.PersonLinks;
import ro.roda.domain.Rodauser;
import ro.roda.domain.Role;
import ro.roda.domain.SourcestudyTypeHistory;
import ro.roda.domain.SourcetypeHistory;
import ro.roda.domain.Study;
import ro.roda.domain.StudyKeyword;
import ro.roda.domain.UserAuthLog;
import ro.roda.domain.UserMessage;
import ro.roda.domain.UserProfile;
import ro.roda.domain.UserSettingValue;

privileged aspect Rodauser_Roo_DbManaged {
    
    @ManyToMany
    @JoinTable(name = "user_role", joinColumns = { @JoinColumn(name = "user_id", nullable = false) }, inverseJoinColumns = { @JoinColumn(name = "role_id", nullable = false) })
    private Set<Role> Rodauser.roles;
    
    @OneToOne(mappedBy = "rodauser")
    private AuthData Rodauser.authData;
    
    @OneToOne(mappedBy = "rodauser")
    private UserProfile Rodauser.userProfile;
    
    @OneToMany(mappedBy = "rodauser")
    private Set<AuditLogChangeset> Rodauser.auditLogChangesets;
    
    @OneToMany(mappedBy = "owner")
    private Set<Catalog> Rodauser.catalogs;
    
    @OneToMany(mappedBy = "ownerId")
    private Set<CmsPage> Rodauser.cmsPages;
    
    @OneToMany(mappedBy = "addedBy")
    private Set<Instance> Rodauser.instances;
    
    @OneToMany(mappedBy = "addedBy")
    private Set<InstanceKeyword> Rodauser.instanceKeywords;
    
    @OneToMany(mappedBy = "addedBy")
    private Set<News> Rodauser.news;
    
    @OneToMany(mappedBy = "userId")
    private Set<PersonLinks> Rodauser.personLinkss;
    
    @OneToMany(mappedBy = "statusBy")
    private Set<PersonLinks> Rodauser.personLinkss1;
    
    @OneToMany(mappedBy = "addedBy")
    private Set<SourcestudyTypeHistory> Rodauser.sourcestudyTypeHistories;
    
    @OneToMany(mappedBy = "addedBy")
    private Set<SourcetypeHistory> Rodauser.sourcetypeHistories;
    
    @OneToMany(mappedBy = "addedBy")
    private Set<Study> Rodauser.studies;
    
    @OneToMany(mappedBy = "addedBy")
    private Set<StudyKeyword> Rodauser.studyKeywords;
    
    @OneToMany(mappedBy = "userId")
    private Set<UserAuthLog> Rodauser.userAuthLogs;
    
    @OneToMany(mappedBy = "toUserId")
    private Set<UserMessage> Rodauser.userMessages;
    
    @OneToMany(mappedBy = "fromUserId")
    private Set<UserMessage> Rodauser.userMessages1;
    
    @OneToMany(mappedBy = "userId")
    private Set<UserSettingValue> Rodauser.userSettingValues;
    
    @Column(name = "credential_provider", columnDefinition = "text")
    @NotNull
    private String Rodauser.credentialProvider;
    
    public Set<Role> Rodauser.getRoles() {
        return roles;
    }
    
    public void Rodauser.setRoles(Set<Role> roles) {
        this.roles = roles;
    }
    
    public AuthData Rodauser.getAuthData() {
        return authData;
    }
    
    public void Rodauser.setAuthData(AuthData authData) {
        this.authData = authData;
    }
    
    public UserProfile Rodauser.getUserProfile() {
        return userProfile;
    }
    
    public void Rodauser.setUserProfile(UserProfile userProfile) {
        this.userProfile = userProfile;
    }
    
    public Set<AuditLogChangeset> Rodauser.getAuditLogChangesets() {
        return auditLogChangesets;
    }
    
    public void Rodauser.setAuditLogChangesets(Set<AuditLogChangeset> auditLogChangesets) {
        this.auditLogChangesets = auditLogChangesets;
    }
    
    public Set<Catalog> Rodauser.getCatalogs() {
        return catalogs;
    }
    
    public void Rodauser.setCatalogs(Set<Catalog> catalogs) {
        this.catalogs = catalogs;
    }
    
    public Set<CmsPage> Rodauser.getCmsPages() {
        return cmsPages;
    }
    
    public void Rodauser.setCmsPages(Set<CmsPage> cmsPages) {
        this.cmsPages = cmsPages;
    }
    
    public Set<Instance> Rodauser.getInstances() {
        return instances;
    }
    
    public void Rodauser.setInstances(Set<Instance> instances) {
        this.instances = instances;
    }
    
    public Set<InstanceKeyword> Rodauser.getInstanceKeywords() {
        return instanceKeywords;
    }
    
    public void Rodauser.setInstanceKeywords(Set<InstanceKeyword> instanceKeywords) {
        this.instanceKeywords = instanceKeywords;
    }
    
    public Set<News> Rodauser.getNews() {
        return news;
    }
    
    public void Rodauser.setNews(Set<News> news) {
        this.news = news;
    }
    
    public Set<PersonLinks> Rodauser.getPersonLinkss() {
        return personLinkss;
    }
    
    public void Rodauser.setPersonLinkss(Set<PersonLinks> personLinkss) {
        this.personLinkss = personLinkss;
    }
    
    public Set<PersonLinks> Rodauser.getPersonLinkss1() {
        return personLinkss1;
    }
    
    public void Rodauser.setPersonLinkss1(Set<PersonLinks> personLinkss1) {
        this.personLinkss1 = personLinkss1;
    }
    
    public Set<SourcestudyTypeHistory> Rodauser.getSourcestudyTypeHistories() {
        return sourcestudyTypeHistories;
    }
    
    public void Rodauser.setSourcestudyTypeHistories(Set<SourcestudyTypeHistory> sourcestudyTypeHistories) {
        this.sourcestudyTypeHistories = sourcestudyTypeHistories;
    }
    
    public Set<SourcetypeHistory> Rodauser.getSourcetypeHistories() {
        return sourcetypeHistories;
    }
    
    public void Rodauser.setSourcetypeHistories(Set<SourcetypeHistory> sourcetypeHistories) {
        this.sourcetypeHistories = sourcetypeHistories;
    }
    
    public Set<Study> Rodauser.getStudies() {
        return studies;
    }
    
    public void Rodauser.setStudies(Set<Study> studies) {
        this.studies = studies;
    }
    
    public Set<StudyKeyword> Rodauser.getStudyKeywords() {
        return studyKeywords;
    }
    
    public void Rodauser.setStudyKeywords(Set<StudyKeyword> studyKeywords) {
        this.studyKeywords = studyKeywords;
    }
    
    public Set<UserAuthLog> Rodauser.getUserAuthLogs() {
        return userAuthLogs;
    }
    
    public void Rodauser.setUserAuthLogs(Set<UserAuthLog> userAuthLogs) {
        this.userAuthLogs = userAuthLogs;
    }
    
    public Set<UserMessage> Rodauser.getUserMessages() {
        return userMessages;
    }
    
    public void Rodauser.setUserMessages(Set<UserMessage> userMessages) {
        this.userMessages = userMessages;
    }
    
    public Set<UserMessage> Rodauser.getUserMessages1() {
        return userMessages1;
    }
    
    public void Rodauser.setUserMessages1(Set<UserMessage> userMessages1) {
        this.userMessages1 = userMessages1;
    }
    
    public Set<UserSettingValue> Rodauser.getUserSettingValues() {
        return userSettingValues;
    }
    
    public void Rodauser.setUserSettingValues(Set<UserSettingValue> userSettingValues) {
        this.userSettingValues = userSettingValues;
    }
    
    public String Rodauser.getCredentialProvider() {
        return credentialProvider;
    }
    
    public void Rodauser.setCredentialProvider(String credentialProvider) {
        this.credentialProvider = credentialProvider;
    }
    
}
