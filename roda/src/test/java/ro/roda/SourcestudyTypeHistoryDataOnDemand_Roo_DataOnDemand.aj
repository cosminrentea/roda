// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ro.roda;

import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import ro.roda.Rodauser;
import ro.roda.RodauserDataOnDemand;
import ro.roda.Sourcestudy;
import ro.roda.SourcestudyDataOnDemand;
import ro.roda.SourcestudyType;
import ro.roda.SourcestudyTypeDataOnDemand;
import ro.roda.SourcestudyTypeHistory;
import ro.roda.SourcestudyTypeHistoryDataOnDemand;
import ro.roda.service.SourcestudyTypeHistoryService;

privileged aspect SourcestudyTypeHistoryDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SourcestudyTypeHistoryDataOnDemand: @Component;
    
    private Random SourcestudyTypeHistoryDataOnDemand.rnd = new SecureRandom();
    
    private List<SourcestudyTypeHistory> SourcestudyTypeHistoryDataOnDemand.data;
    
    @Autowired
    RodauserDataOnDemand SourcestudyTypeHistoryDataOnDemand.rodauserDataOnDemand;
    
    @Autowired
    SourcestudyDataOnDemand SourcestudyTypeHistoryDataOnDemand.sourcestudyDataOnDemand;
    
    @Autowired
    SourcestudyTypeDataOnDemand SourcestudyTypeHistoryDataOnDemand.sourcestudyTypeDataOnDemand;
    
    @Autowired
    SourcestudyTypeHistoryService SourcestudyTypeHistoryDataOnDemand.sourcestudyTypeHistoryService;
    
    public SourcestudyTypeHistory SourcestudyTypeHistoryDataOnDemand.getNewTransientSourcestudyTypeHistory(int index) {
        SourcestudyTypeHistory obj = new SourcestudyTypeHistory();
        setAddedBy(obj, index);
        setDateend(obj, index);
        setDatestart(obj, index);
        setSourcesstudyId(obj, index);
        setSourcestudyTypeId(obj, index);
        return obj;
    }
    
    public void SourcestudyTypeHistoryDataOnDemand.setAddedBy(SourcestudyTypeHistory obj, int index) {
        Rodauser addedBy = rodauserDataOnDemand.getRandomRodauser();
        obj.setAddedBy(addedBy);
    }
    
    public void SourcestudyTypeHistoryDataOnDemand.setDateend(SourcestudyTypeHistory obj, int index) {
        Calendar dateend = Calendar.getInstance();
        obj.setDateend(dateend);
    }
    
    public void SourcestudyTypeHistoryDataOnDemand.setDatestart(SourcestudyTypeHistory obj, int index) {
        Calendar datestart = Calendar.getInstance();
        obj.setDatestart(datestart);
    }
    
    public void SourcestudyTypeHistoryDataOnDemand.setSourcesstudyId(SourcestudyTypeHistory obj, int index) {
        Sourcestudy sourcesstudyId = sourcestudyDataOnDemand.getRandomSourcestudy();
        obj.setSourcesstudyId(sourcesstudyId);
    }
    
    public void SourcestudyTypeHistoryDataOnDemand.setSourcestudyTypeId(SourcestudyTypeHistory obj, int index) {
        SourcestudyType sourcestudyTypeId = sourcestudyTypeDataOnDemand.getRandomSourcestudyType();
        obj.setSourcestudyTypeId(sourcestudyTypeId);
    }
    
    public SourcestudyTypeHistory SourcestudyTypeHistoryDataOnDemand.getSpecificSourcestudyTypeHistory(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        SourcestudyTypeHistory obj = data.get(index);
        Integer id = obj.getId();
        return sourcestudyTypeHistoryService.findSourcestudyTypeHistory(id);
    }
    
    public SourcestudyTypeHistory SourcestudyTypeHistoryDataOnDemand.getRandomSourcestudyTypeHistory() {
        init();
        SourcestudyTypeHistory obj = data.get(rnd.nextInt(data.size()));
        Integer id = obj.getId();
        return sourcestudyTypeHistoryService.findSourcestudyTypeHistory(id);
    }
    
    public boolean SourcestudyTypeHistoryDataOnDemand.modifySourcestudyTypeHistory(SourcestudyTypeHistory obj) {
        return false;
    }
    
    public void SourcestudyTypeHistoryDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = sourcestudyTypeHistoryService.findSourcestudyTypeHistoryEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'SourcestudyTypeHistory' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<SourcestudyTypeHistory>();
        for (int i = 0; i < 10; i++) {
            SourcestudyTypeHistory obj = getNewTransientSourcestudyTypeHistory(i);
            try {
                sourcestudyTypeHistoryService.saveSourcestudyTypeHistory(obj);
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
