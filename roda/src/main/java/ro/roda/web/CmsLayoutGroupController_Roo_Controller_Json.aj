// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ro.roda.web;

import java.util.List;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import ro.roda.domain.CmsLayoutGroup;
import ro.roda.web.CmsLayoutGroupController;

privileged aspect CmsLayoutGroupController_Roo_Controller_Json {
    
    @RequestMapping(value = "/{id}", headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> CmsLayoutGroupController.showJson(@PathVariable("id") Integer id) {
        CmsLayoutGroup cmsLayoutGroup = cmsLayoutGroupService.findCmsLayoutGroup(id);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        if (cmsLayoutGroup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(cmsLayoutGroup.toJson(), headers, HttpStatus.OK);
    }
    
    @RequestMapping(headers = "Accept=application/json")
    @ResponseBody
    public ResponseEntity<String> CmsLayoutGroupController.listJson() {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json; charset=utf-8");
        List<CmsLayoutGroup> result = cmsLayoutGroupService.findAllCmsLayoutGroups();
        return new ResponseEntity<String>(CmsLayoutGroup.toJsonArray(result), headers, HttpStatus.OK);
    }
    
    @RequestMapping(method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> CmsLayoutGroupController.createFromJson(@RequestBody String json) {
        CmsLayoutGroup cmsLayoutGroup = CmsLayoutGroup.fromJsonToCmsLayoutGroup(json);
        cmsLayoutGroupService.saveCmsLayoutGroup(cmsLayoutGroup);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.POST, headers = "Accept=application/json")
    public ResponseEntity<String> CmsLayoutGroupController.createFromJsonArray(@RequestBody String json) {
        for (CmsLayoutGroup cmsLayoutGroup: CmsLayoutGroup.fromJsonArrayToCmsLayoutGroups(json)) {
            cmsLayoutGroupService.saveCmsLayoutGroup(cmsLayoutGroup);
        }
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        return new ResponseEntity<String>(headers, HttpStatus.CREATED);
    }
    
    @RequestMapping(method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> CmsLayoutGroupController.updateFromJson(@RequestBody String json) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        CmsLayoutGroup cmsLayoutGroup = CmsLayoutGroup.fromJsonToCmsLayoutGroup(json);
        if (cmsLayoutGroupService.updateCmsLayoutGroup(cmsLayoutGroup) == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/jsonArray", method = RequestMethod.PUT, headers = "Accept=application/json")
    public ResponseEntity<String> CmsLayoutGroupController.updateFromJsonArray(@RequestBody String json) {
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        for (CmsLayoutGroup cmsLayoutGroup: CmsLayoutGroup.fromJsonArrayToCmsLayoutGroups(json)) {
            if (cmsLayoutGroupService.updateCmsLayoutGroup(cmsLayoutGroup) == null) {
                return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
            }
        }
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
    @RequestMapping(value = "/{id}", method = RequestMethod.DELETE, headers = "Accept=application/json")
    public ResponseEntity<String> CmsLayoutGroupController.deleteFromJson(@PathVariable("id") Integer id) {
        CmsLayoutGroup cmsLayoutGroup = cmsLayoutGroupService.findCmsLayoutGroup(id);
        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Type", "application/json");
        if (cmsLayoutGroup == null) {
            return new ResponseEntity<String>(headers, HttpStatus.NOT_FOUND);
        }
        cmsLayoutGroupService.deleteCmsLayoutGroup(cmsLayoutGroup);
        return new ResponseEntity<String>(headers, HttpStatus.OK);
    }
    
}
