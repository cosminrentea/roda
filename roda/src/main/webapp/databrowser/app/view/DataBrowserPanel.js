/*
 * File: app/view/DataBrowserPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('databrowser.view.DataBrowserPanel', {
    extend: 'Ext.panel.Panel',

    frame: true,
    height: 473,
    width: 668,
    layout: {
        align: 'stretch',
        type: 'hbox'
    },
    title: 'RODA - Data Browser',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'tabpanel',
                    dock: 'left',
                    id: 'NavigatorTabPanel',
                    width: 226,
                    animCollapse: false,
                    collapseDirection: 'left',
                    collapsible: true,
                    activeTab: 0,
                    items: [
                        {
                            xtype: 'panel',
                            id: 'CatalogsPanel',
                            autoScroll: true,
                            title: 'Cataloage',
                            tabConfig: {
                                xtype: 'tab',
                                id: 'CatalogsTabConfig'
                            },
                            items: [
                                {
                                    xtype: 'treepanel',
                                    height: 389,
                                    id: 'CatalogsTreePanel',
                                    store: 'CatalogTreeStore',
                                    displayField: 'name',
                                    viewConfig: {
                                        id: 'CatalogsTreeView',
                                        autoScroll: true,
                                        rootVisible: false
                                    },
                                    listeners: {
                                        itemclick: {
                                            fn: me.onTreepanelItemClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            id: 'YearsPanel',
                            autoScroll: true,
                            title: 'Ani',
                            tabConfig: {
                                xtype: 'tab',
                                id: 'YearsTabConfig'
                            }
                        },
                        {
                            xtype: 'panel',
                            id: 'UsersPanel',
                            width: 226,
                            autoScroll: true,
                            title: 'Utilizatori',
                            tabConfig: {
                                xtype: 'tab',
                                id: 'UsersTabConfig'
                            },
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    id: 'UsersGridPanel',
                                    title: 'My Grid Panel',
                                    store: 'UsersStore',
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'username',
                                            hideable: false,
                                            text: 'User'
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'password',
                                            hideable: false,
                                            text: 'Password'
                                        }
                                    ],
                                    viewConfig: {
                                        id: 'UsersGridView'
                                    }
                                }
                            ]
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'panel',
                    flex: 1,
                    id: 'DetailsPanel',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            id: 'DataBrowserToolbar',
                            items: [
                                {
                                    xtype: 'textfield',
                                    id: 'LocalSearchTextField',
                                    width: 190,
                                    emptyText: 'Cautare locala'
                                },
                                {
                                    xtype: 'button',
                                    id: 'AdvancedSearchButton',
                                    width: 156,
                                    text: 'Cautare avansata'
                                },
                                {
                                    xtype: 'tbseparator',
                                    id: 'DataBrowserToolbarSeparator1'
                                },
                                {
                                    xtype: 'buttongroup',
                                    autoRender: false,
                                    id: 'SMCButtonGroup',
                                    width: 72,
                                    header: false,
                                    title: 'Buttons',
                                    columns: 3,
                                    items: [
                                        {
                                            xtype: 'button',
                                            id: 'SButton',
                                            text: 'S'
                                        },
                                        {
                                            xtype: 'button',
                                            id: 'MButton',
                                            text: 'M'
                                        },
                                        {
                                            xtype: 'button',
                                            id: 'CButton',
                                            text: 'C'
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    items: [
                        {
                            xtype: 'gridpanel',
                            height: 404,
                            id: 'DetailsGridPanel',
                            itemId: 'MyGridPanel',
                            width: 432,
                            hideHeaders: true,
                            columns: [
                                {
                                    xtype: 'numbercolumn',
                                    dataIndex: 'an',
                                    text: 'Number',
                                    format: '0000'
                                },
                                {
                                    xtype: 'gridcolumn',
                                    width: 326,
                                    dataIndex: 'name',
                                    text: 'String'
                                }
                            ],
                            viewConfig: {
                                frame: true,
                                id: 'DetailsGridView'
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onTreepanelItemClick: function(dataview, record, item, index, e, eOpts) {
        //if (record.get('leaf') === true) 
        //{
        //var mainPanel = dataview.up('#DataBrowserPanel');
        //var gridPanel = mainPanel.down('#MyGridPanel');
        var gridPanel = Ext.getCmp('#MyGridPanel');

        var studyYear = record.get('an');
        var studyTitle = record.get('name');
        var studyData = [{an: studyYear, name: studyTitle}];	

        var store = gridPanel.getStore();

        store.add(new store.recordType({
            an: studyYear,
            name: studyTitle
        }));
        store.commitChanges();

        gridPanel.refresh();

        //var studyData = [studyYear, studyTitle];
        /*var store = Ext.create('Ext.data.Store', {
        autoLoad: true,
        model: Ext.ModelManager.getModel('Studies'),
        data: studyData,
        proxy: {
        type:'Memory',
        reader: {
        type: 'json',
        root: 'records'}
        }
        });

        gridPanel.store = store;*/



        //gridPanel.store.loadRecords(studyData);
        // gridPanel.store.commitChanges();

        // gridPanel.getView().refresh();
        //}

    }

});