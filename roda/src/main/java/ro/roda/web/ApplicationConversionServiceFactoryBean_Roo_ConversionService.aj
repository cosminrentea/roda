// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ro.roda.web;

import org.apache.commons.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;
import ro.roda.AclClass;
import ro.roda.AclEntry;
import ro.roda.AclObjectIdentity;
import ro.roda.AclSid;
import ro.roda.Address;
import ro.roda.Audit;
import ro.roda.AuditField;
import ro.roda.AuditFieldPK;
import ro.roda.AuditRowId;
import ro.roda.AuditRowIdPK;
import ro.roda.AuthData;
import ro.roda.Catalog;
import ro.roda.CatalogAcl;
import ro.roda.CatalogAclPK;
import ro.roda.CatalogStudy;
import ro.roda.CatalogStudyPK;
import ro.roda.City;
import ro.roda.CmsFile;
import ro.roda.CmsFilePropertyNameValue;
import ro.roda.CmsFilePropertyNameValuePK;
import ro.roda.CmsFolder;
import ro.roda.CmsLayout;
import ro.roda.CmsLayoutGroup;
import ro.roda.CmsPage;
import ro.roda.CmsPageContent;
import ro.roda.CmsPageType;
import ro.roda.CmsSnippet;
import ro.roda.CmsSnippetGroup;
import ro.roda.CollectionModelType;
import ro.roda.Concept;
import ro.roda.Country;
import ro.roda.Email;
import ro.roda.File;
import ro.roda.FileAcl;
import ro.roda.FileAclPK;
import ro.roda.FilePropertyNameValue;
import ro.roda.FilePropertyNameValuePK;
import ro.roda.Form;
import ro.roda.FormEditedNumberVar;
import ro.roda.FormEditedNumberVarPK;
import ro.roda.FormEditedTextVar;
import ro.roda.FormEditedTextVarPK;
import ro.roda.FormSelectionVar;
import ro.roda.FormSelectionVarPK;
import ro.roda.Instance;
import ro.roda.InstanceAcl;
import ro.roda.InstanceAclPK;
import ro.roda.InstanceDescr;
import ro.roda.InstanceDescrPK;
import ro.roda.InstanceKeyword;
import ro.roda.InstanceKeywordPK;
import ro.roda.InstanceOrg;
import ro.roda.InstanceOrgAssoc;
import ro.roda.InstanceOrgPK;
import ro.roda.InstancePerson;
import ro.roda.InstancePersonAssoc;
import ro.roda.InstancePersonPK;
import ro.roda.Internet;
import ro.roda.Item;
import ro.roda.Keyword;
import ro.roda.Lang;
import ro.roda.News;
import ro.roda.Org;
import ro.roda.OrgAddress;
import ro.roda.OrgAddressPK;
import ro.roda.OrgEmail;
import ro.roda.OrgEmailPK;
import ro.roda.OrgInternet;
import ro.roda.OrgInternetPK;
import ro.roda.OrgPhone;
import ro.roda.OrgPhonePK;
import ro.roda.OrgPrefix;
import ro.roda.OrgRelationType;
import ro.roda.OrgRelations;
import ro.roda.OrgRelationsPK;
import ro.roda.OrgSufix;
import ro.roda.OtherStatistic;
import ro.roda.Person;
import ro.roda.PersonAddress;
import ro.roda.PersonAddressPK;
import ro.roda.PersonEmail;
import ro.roda.PersonEmailPK;
import ro.roda.PersonInternet;
import ro.roda.PersonInternetPK;
import ro.roda.PersonLinks;
import ro.roda.PersonOrg;
import ro.roda.PersonOrgPK;
import ro.roda.PersonPhone;
import ro.roda.PersonPhonePK;
import ro.roda.PersonRole;
import ro.roda.Phone;
import ro.roda.Prefix;
import ro.roda.PropertyName;
import ro.roda.PropertyValue;
import ro.roda.Region;
import ro.roda.Regiontype;
import ro.roda.Role;
import ro.roda.SamplingProcedure;
import ro.roda.Scale;
import ro.roda.SelectionVariable;
import ro.roda.SelectionVariableItem;
import ro.roda.SelectionVariableItemPK;
import ro.roda.Setting;
import ro.roda.SettingGroup;
import ro.roda.SettingValue;
import ro.roda.Skip;
import ro.roda.Source;
import ro.roda.SourceContactMethod;
import ro.roda.SourceContacts;
import ro.roda.Sourcestudy;
import ro.roda.SourcestudyType;
import ro.roda.SourcestudyTypeHistory;
import ro.roda.Sourcetype;
import ro.roda.SourcetypeHistory;
import ro.roda.Study;
import ro.roda.StudyAcl;
import ro.roda.StudyAclPK;
import ro.roda.StudyDescr;
import ro.roda.StudyDescrPK;
import ro.roda.StudyDocuments;
import ro.roda.StudyDocumentsPK;
import ro.roda.StudyKeyword;
import ro.roda.StudyKeywordPK;
import ro.roda.StudyOrg;
import ro.roda.StudyOrgAssoc;
import ro.roda.StudyOrgPK;
import ro.roda.StudyPerson;
import ro.roda.StudyPersonAsoc;
import ro.roda.StudyPersonAssoc;
import ro.roda.StudyPersonPK;
import ro.roda.Suffix;
import ro.roda.TimeMethType;
import ro.roda.TitleType;
import ro.roda.Topic;
import ro.roda.TranslatedTopic;
import ro.roda.TranslatedTopicPK;
import ro.roda.UnitAnalysis;
import ro.roda.User;
import ro.roda.UserAuthLog;
import ro.roda.UserAuthLogPK;
import ro.roda.UserMessage;
import ro.roda.UserProfile;
import ro.roda.UserSetting;
import ro.roda.UserSettingGroup;
import ro.roda.UserSettingValue;
import ro.roda.UserSettingValuePK;
import ro.roda.Value;
import ro.roda.Vargroup;
import ro.roda.Variable;
import ro.roda.web.ApplicationConversionServiceFactoryBean;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<AclClass, String> ApplicationConversionServiceFactoryBean.getAclClassToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AclClass, java.lang.String>() {
            public String convert(AclClass aclClass) {
                return new StringBuilder().append(aclClass.getClass1()).toString();
            }
        };
    }
    
    public Converter<Long, AclClass> ApplicationConversionServiceFactoryBean.getIdToAclClassConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.AclClass>() {
            public ro.roda.AclClass convert(java.lang.Long id) {
                return AclClass.findAclClass(id);
            }
        };
    }
    
    public Converter<String, AclClass> ApplicationConversionServiceFactoryBean.getStringToAclClassConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.AclClass>() {
            public ro.roda.AclClass convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AclClass.class);
            }
        };
    }
    
    public Converter<AclEntry, String> ApplicationConversionServiceFactoryBean.getAclEntryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AclEntry, java.lang.String>() {
            public String convert(AclEntry aclEntry) {
                return new StringBuilder().append(aclEntry.getAceOrder()).append(' ').append(aclEntry.getMask()).toString();
            }
        };
    }
    
    public Converter<Long, AclEntry> ApplicationConversionServiceFactoryBean.getIdToAclEntryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.AclEntry>() {
            public ro.roda.AclEntry convert(java.lang.Long id) {
                return AclEntry.findAclEntry(id);
            }
        };
    }
    
    public Converter<String, AclEntry> ApplicationConversionServiceFactoryBean.getStringToAclEntryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.AclEntry>() {
            public ro.roda.AclEntry convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AclEntry.class);
            }
        };
    }
    
    public Converter<AclObjectIdentity, String> ApplicationConversionServiceFactoryBean.getAclObjectIdentityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AclObjectIdentity, java.lang.String>() {
            public String convert(AclObjectIdentity aclObjectIdentity) {
                return new StringBuilder().append(aclObjectIdentity.getObjectIdIdentity()).toString();
            }
        };
    }
    
    public Converter<Long, AclObjectIdentity> ApplicationConversionServiceFactoryBean.getIdToAclObjectIdentityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.AclObjectIdentity>() {
            public ro.roda.AclObjectIdentity convert(java.lang.Long id) {
                return AclObjectIdentity.findAclObjectIdentity(id);
            }
        };
    }
    
    public Converter<String, AclObjectIdentity> ApplicationConversionServiceFactoryBean.getStringToAclObjectIdentityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.AclObjectIdentity>() {
            public ro.roda.AclObjectIdentity convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AclObjectIdentity.class);
            }
        };
    }
    
    public Converter<AclSid, String> ApplicationConversionServiceFactoryBean.getAclSidToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AclSid, java.lang.String>() {
            public String convert(AclSid aclSid) {
                return new StringBuilder().append(aclSid.getSid()).toString();
            }
        };
    }
    
    public Converter<Long, AclSid> ApplicationConversionServiceFactoryBean.getIdToAclSidConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.AclSid>() {
            public ro.roda.AclSid convert(java.lang.Long id) {
                return AclSid.findAclSid(id);
            }
        };
    }
    
    public Converter<String, AclSid> ApplicationConversionServiceFactoryBean.getStringToAclSidConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.AclSid>() {
            public ro.roda.AclSid convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AclSid.class);
            }
        };
    }
    
    public Converter<Address, String> ApplicationConversionServiceFactoryBean.getAddressToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Address, java.lang.String>() {
            public String convert(Address address) {
                return new StringBuilder().append(address.getCountryId()).append(' ').append(address.getAddress1()).append(' ').append(address.getAddress2()).append(' ').append(address.getSubdivName()).toString();
            }
        };
    }
    
    public Converter<Integer, Address> ApplicationConversionServiceFactoryBean.getIdToAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Address>() {
            public ro.roda.Address convert(java.lang.Integer id) {
                return Address.findAddress(id);
            }
        };
    }
    
    public Converter<String, Address> ApplicationConversionServiceFactoryBean.getStringToAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Address>() {
            public ro.roda.Address convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Address.class);
            }
        };
    }
    
    public Converter<Audit, String> ApplicationConversionServiceFactoryBean.getAuditToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Audit, java.lang.String>() {
            public String convert(Audit audit) {
                return new StringBuilder().append(audit.getTime()).append(' ').append(audit.getOperationType()).append(' ').append(audit.getTableName()).append(' ').append(audit.getVersionNumber()).toString();
            }
        };
    }
    
    public Converter<Integer, Audit> ApplicationConversionServiceFactoryBean.getIdToAuditConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Audit>() {
            public ro.roda.Audit convert(java.lang.Integer id) {
                return Audit.findAudit(id);
            }
        };
    }
    
    public Converter<String, Audit> ApplicationConversionServiceFactoryBean.getStringToAuditConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Audit>() {
            public ro.roda.Audit convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Audit.class);
            }
        };
    }
    
    public Converter<AuditField, String> ApplicationConversionServiceFactoryBean.getAuditFieldToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AuditField, java.lang.String>() {
            public String convert(AuditField auditField) {
                return new StringBuilder().append(auditField.getColumnName()).append(' ').append(auditField.getNewValue()).append(' ').append(auditField.getOldValue()).toString();
            }
        };
    }
    
    public Converter<AuditFieldPK, AuditField> ApplicationConversionServiceFactoryBean.getIdToAuditFieldConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AuditFieldPK, ro.roda.AuditField>() {
            public ro.roda.AuditField convert(ro.roda.AuditFieldPK id) {
                return AuditField.findAuditField(id);
            }
        };
    }
    
    public Converter<String, AuditField> ApplicationConversionServiceFactoryBean.getStringToAuditFieldConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.AuditField>() {
            public ro.roda.AuditField convert(String id) {
                return getObject().convert(getObject().convert(id, AuditFieldPK.class), AuditField.class);
            }
        };
    }
    
    public Converter<AuditRowId, String> ApplicationConversionServiceFactoryBean.getAuditRowIdToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AuditRowId, java.lang.String>() {
            public String convert(AuditRowId auditRowId) {
                return new StringBuilder().append(auditRowId.getColumnName()).append(' ').append(auditRowId.getColumnValue()).toString();
            }
        };
    }
    
    public Converter<AuditRowIdPK, AuditRowId> ApplicationConversionServiceFactoryBean.getIdToAuditRowIdConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AuditRowIdPK, ro.roda.AuditRowId>() {
            public ro.roda.AuditRowId convert(ro.roda.AuditRowIdPK id) {
                return AuditRowId.findAuditRowId(id);
            }
        };
    }
    
    public Converter<String, AuditRowId> ApplicationConversionServiceFactoryBean.getStringToAuditRowIdConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.AuditRowId>() {
            public ro.roda.AuditRowId convert(String id) {
                return getObject().convert(getObject().convert(id, AuditRowIdPK.class), AuditRowId.class);
            }
        };
    }
    
    public Converter<AuthData, String> ApplicationConversionServiceFactoryBean.getAuthDataToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AuthData, java.lang.String>() {
            public String convert(AuthData authData) {
                return new StringBuilder().append(authData.getCredentialProvider()).append(' ').append(authData.getFieldName()).append(' ').append(authData.getFieldValue()).toString();
            }
        };
    }
    
    public Converter<Integer, AuthData> ApplicationConversionServiceFactoryBean.getIdToAuthDataConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.AuthData>() {
            public ro.roda.AuthData convert(java.lang.Integer id) {
                return AuthData.findAuthData(id);
            }
        };
    }
    
    public Converter<String, AuthData> ApplicationConversionServiceFactoryBean.getStringToAuthDataConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.AuthData>() {
            public ro.roda.AuthData convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), AuthData.class);
            }
        };
    }
    
    public Converter<Catalog, String> ApplicationConversionServiceFactoryBean.getCatalogToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Catalog, java.lang.String>() {
            public String convert(Catalog catalog) {
                return new StringBuilder().append(catalog.getName()).append(' ').append(catalog.getAdded()).toString();
            }
        };
    }
    
    public Converter<Integer, Catalog> ApplicationConversionServiceFactoryBean.getIdToCatalogConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Catalog>() {
            public ro.roda.Catalog convert(java.lang.Integer id) {
                return Catalog.findCatalog(id);
            }
        };
    }
    
    public Converter<String, Catalog> ApplicationConversionServiceFactoryBean.getStringToCatalogConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Catalog>() {
            public ro.roda.Catalog convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Catalog.class);
            }
        };
    }
    
    public Converter<CatalogAcl, String> ApplicationConversionServiceFactoryBean.getCatalogAclToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CatalogAcl, java.lang.String>() {
            public String convert(CatalogAcl catalogAcl) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<CatalogAclPK, CatalogAcl> ApplicationConversionServiceFactoryBean.getIdToCatalogAclConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CatalogAclPK, ro.roda.CatalogAcl>() {
            public ro.roda.CatalogAcl convert(ro.roda.CatalogAclPK id) {
                return CatalogAcl.findCatalogAcl(id);
            }
        };
    }
    
    public Converter<String, CatalogAcl> ApplicationConversionServiceFactoryBean.getStringToCatalogAclConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CatalogAcl>() {
            public ro.roda.CatalogAcl convert(String id) {
                return getObject().convert(getObject().convert(id, CatalogAclPK.class), CatalogAcl.class);
            }
        };
    }
    
    public Converter<CatalogStudy, String> ApplicationConversionServiceFactoryBean.getCatalogStudyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CatalogStudy, java.lang.String>() {
            public String convert(CatalogStudy catalogStudy) {
                return new StringBuilder().append(catalogStudy.getAdded()).toString();
            }
        };
    }
    
    public Converter<CatalogStudyPK, CatalogStudy> ApplicationConversionServiceFactoryBean.getIdToCatalogStudyConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CatalogStudyPK, ro.roda.CatalogStudy>() {
            public ro.roda.CatalogStudy convert(ro.roda.CatalogStudyPK id) {
                return CatalogStudy.findCatalogStudy(id);
            }
        };
    }
    
    public Converter<String, CatalogStudy> ApplicationConversionServiceFactoryBean.getStringToCatalogStudyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CatalogStudy>() {
            public ro.roda.CatalogStudy convert(String id) {
                return getObject().convert(getObject().convert(id, CatalogStudyPK.class), CatalogStudy.class);
            }
        };
    }
    
    public Converter<City, String> ApplicationConversionServiceFactoryBean.getCityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.City, java.lang.String>() {
            public String convert(City city) {
                return new StringBuilder().append(city.getName()).append(' ').append(city.getCityCode()).append(' ').append(city.getCityCodeName()).append(' ').append(city.getCityCodeSup()).toString();
            }
        };
    }
    
    public Converter<Integer, City> ApplicationConversionServiceFactoryBean.getIdToCityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.City>() {
            public ro.roda.City convert(java.lang.Integer id) {
                return City.findCity(id);
            }
        };
    }
    
    public Converter<String, City> ApplicationConversionServiceFactoryBean.getStringToCityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.City>() {
            public ro.roda.City convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), City.class);
            }
        };
    }
    
    public Converter<CmsFile, String> ApplicationConversionServiceFactoryBean.getCmsFileToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsFile, java.lang.String>() {
            public String convert(CmsFile cmsFile) {
                return new StringBuilder().append(cmsFile.getFilename()).append(' ').append(cmsFile.getLabel()).append(' ').append(cmsFile.getFilesize()).toString();
            }
        };
    }
    
    public Converter<Integer, CmsFile> ApplicationConversionServiceFactoryBean.getIdToCmsFileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.CmsFile>() {
            public ro.roda.CmsFile convert(java.lang.Integer id) {
                return CmsFile.findCmsFile(id);
            }
        };
    }
    
    public Converter<String, CmsFile> ApplicationConversionServiceFactoryBean.getStringToCmsFileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsFile>() {
            public ro.roda.CmsFile convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CmsFile.class);
            }
        };
    }
    
    public Converter<CmsFilePropertyNameValue, String> ApplicationConversionServiceFactoryBean.getCmsFilePropertyNameValueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsFilePropertyNameValue, java.lang.String>() {
            public String convert(CmsFilePropertyNameValue cmsFilePropertyNameValue) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<CmsFilePropertyNameValuePK, CmsFilePropertyNameValue> ApplicationConversionServiceFactoryBean.getIdToCmsFilePropertyNameValueConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsFilePropertyNameValuePK, ro.roda.CmsFilePropertyNameValue>() {
            public ro.roda.CmsFilePropertyNameValue convert(ro.roda.CmsFilePropertyNameValuePK id) {
                return CmsFilePropertyNameValue.findCmsFilePropertyNameValue(id);
            }
        };
    }
    
    public Converter<String, CmsFilePropertyNameValue> ApplicationConversionServiceFactoryBean.getStringToCmsFilePropertyNameValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsFilePropertyNameValue>() {
            public ro.roda.CmsFilePropertyNameValue convert(String id) {
                return getObject().convert(getObject().convert(id, CmsFilePropertyNameValuePK.class), CmsFilePropertyNameValue.class);
            }
        };
    }
    
    public Converter<CmsFolder, String> ApplicationConversionServiceFactoryBean.getCmsFolderToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsFolder, java.lang.String>() {
            public String convert(CmsFolder cmsFolder) {
                return new StringBuilder().append(cmsFolder.getName()).append(' ').append(cmsFolder.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, CmsFolder> ApplicationConversionServiceFactoryBean.getIdToCmsFolderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.CmsFolder>() {
            public ro.roda.CmsFolder convert(java.lang.Integer id) {
                return CmsFolder.findCmsFolder(id);
            }
        };
    }
    
    public Converter<String, CmsFolder> ApplicationConversionServiceFactoryBean.getStringToCmsFolderConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsFolder>() {
            public ro.roda.CmsFolder convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CmsFolder.class);
            }
        };
    }
    
    public Converter<CmsLayout, String> ApplicationConversionServiceFactoryBean.getCmsLayoutToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsLayout, java.lang.String>() {
            public String convert(CmsLayout cmsLayout) {
                return new StringBuilder().append(cmsLayout.getName()).append(' ').append(cmsLayout.getLayoutContent()).toString();
            }
        };
    }
    
    public Converter<Integer, CmsLayout> ApplicationConversionServiceFactoryBean.getIdToCmsLayoutConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.CmsLayout>() {
            public ro.roda.CmsLayout convert(java.lang.Integer id) {
                return CmsLayout.findCmsLayout(id);
            }
        };
    }
    
    public Converter<String, CmsLayout> ApplicationConversionServiceFactoryBean.getStringToCmsLayoutConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsLayout>() {
            public ro.roda.CmsLayout convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CmsLayout.class);
            }
        };
    }
    
    public Converter<CmsLayoutGroup, String> ApplicationConversionServiceFactoryBean.getCmsLayoutGroupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsLayoutGroup, java.lang.String>() {
            public String convert(CmsLayoutGroup cmsLayoutGroup) {
                return new StringBuilder().append(cmsLayoutGroup.getName()).append(' ').append(cmsLayoutGroup.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, CmsLayoutGroup> ApplicationConversionServiceFactoryBean.getIdToCmsLayoutGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.CmsLayoutGroup>() {
            public ro.roda.CmsLayoutGroup convert(java.lang.Integer id) {
                return CmsLayoutGroup.findCmsLayoutGroup(id);
            }
        };
    }
    
    public Converter<String, CmsLayoutGroup> ApplicationConversionServiceFactoryBean.getStringToCmsLayoutGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsLayoutGroup>() {
            public ro.roda.CmsLayoutGroup convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CmsLayoutGroup.class);
            }
        };
    }
    
    public Converter<CmsPage, String> ApplicationConversionServiceFactoryBean.getCmsPageToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsPage, java.lang.String>() {
            public String convert(CmsPage cmsPage) {
                return new StringBuilder().append(cmsPage.getName()).append(' ').append(cmsPage.getUrl()).toString();
            }
        };
    }
    
    public Converter<Integer, CmsPage> ApplicationConversionServiceFactoryBean.getIdToCmsPageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.CmsPage>() {
            public ro.roda.CmsPage convert(java.lang.Integer id) {
                return CmsPage.findCmsPage(id);
            }
        };
    }
    
    public Converter<String, CmsPage> ApplicationConversionServiceFactoryBean.getStringToCmsPageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsPage>() {
            public ro.roda.CmsPage convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CmsPage.class);
            }
        };
    }
    
    public Converter<CmsPageContent, String> ApplicationConversionServiceFactoryBean.getCmsPageContentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsPageContent, java.lang.String>() {
            public String convert(CmsPageContent cmsPageContent) {
                return new StringBuilder().append(cmsPageContent.getName()).append(' ').append(cmsPageContent.getContentTitle()).append(' ').append(cmsPageContent.getContentText()).append(' ').append(cmsPageContent.getOrderInPage()).toString();
            }
        };
    }
    
    public Converter<Integer, CmsPageContent> ApplicationConversionServiceFactoryBean.getIdToCmsPageContentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.CmsPageContent>() {
            public ro.roda.CmsPageContent convert(java.lang.Integer id) {
                return CmsPageContent.findCmsPageContent(id);
            }
        };
    }
    
    public Converter<String, CmsPageContent> ApplicationConversionServiceFactoryBean.getStringToCmsPageContentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsPageContent>() {
            public ro.roda.CmsPageContent convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CmsPageContent.class);
            }
        };
    }
    
    public Converter<CmsPageType, String> ApplicationConversionServiceFactoryBean.getCmsPageTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsPageType, java.lang.String>() {
            public String convert(CmsPageType cmsPageType) {
                return new StringBuilder().append(cmsPageType.getName()).append(' ').append(cmsPageType.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, CmsPageType> ApplicationConversionServiceFactoryBean.getIdToCmsPageTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.CmsPageType>() {
            public ro.roda.CmsPageType convert(java.lang.Integer id) {
                return CmsPageType.findCmsPageType(id);
            }
        };
    }
    
    public Converter<String, CmsPageType> ApplicationConversionServiceFactoryBean.getStringToCmsPageTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsPageType>() {
            public ro.roda.CmsPageType convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CmsPageType.class);
            }
        };
    }
    
    public Converter<CmsSnippet, String> ApplicationConversionServiceFactoryBean.getCmsSnippetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsSnippet, java.lang.String>() {
            public String convert(CmsSnippet cmsSnippet) {
                return new StringBuilder().append(cmsSnippet.getName()).append(' ').append(cmsSnippet.getSnippetContent()).toString();
            }
        };
    }
    
    public Converter<Integer, CmsSnippet> ApplicationConversionServiceFactoryBean.getIdToCmsSnippetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.CmsSnippet>() {
            public ro.roda.CmsSnippet convert(java.lang.Integer id) {
                return CmsSnippet.findCmsSnippet(id);
            }
        };
    }
    
    public Converter<String, CmsSnippet> ApplicationConversionServiceFactoryBean.getStringToCmsSnippetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsSnippet>() {
            public ro.roda.CmsSnippet convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CmsSnippet.class);
            }
        };
    }
    
    public Converter<CmsSnippetGroup, String> ApplicationConversionServiceFactoryBean.getCmsSnippetGroupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsSnippetGroup, java.lang.String>() {
            public String convert(CmsSnippetGroup cmsSnippetGroup) {
                return new StringBuilder().append(cmsSnippetGroup.getName()).append(' ').append(cmsSnippetGroup.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, CmsSnippetGroup> ApplicationConversionServiceFactoryBean.getIdToCmsSnippetGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.CmsSnippetGroup>() {
            public ro.roda.CmsSnippetGroup convert(java.lang.Integer id) {
                return CmsSnippetGroup.findCmsSnippetGroup(id);
            }
        };
    }
    
    public Converter<String, CmsSnippetGroup> ApplicationConversionServiceFactoryBean.getStringToCmsSnippetGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsSnippetGroup>() {
            public ro.roda.CmsSnippetGroup convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CmsSnippetGroup.class);
            }
        };
    }
    
    public Converter<CollectionModelType, String> ApplicationConversionServiceFactoryBean.getCollectionModelTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CollectionModelType, java.lang.String>() {
            public String convert(CollectionModelType collectionModelType) {
                return new StringBuilder().append(collectionModelType.getName()).append(' ').append(collectionModelType.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, CollectionModelType> ApplicationConversionServiceFactoryBean.getIdToCollectionModelTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.CollectionModelType>() {
            public ro.roda.CollectionModelType convert(java.lang.Integer id) {
                return CollectionModelType.findCollectionModelType(id);
            }
        };
    }
    
    public Converter<String, CollectionModelType> ApplicationConversionServiceFactoryBean.getStringToCollectionModelTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CollectionModelType>() {
            public ro.roda.CollectionModelType convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), CollectionModelType.class);
            }
        };
    }
    
    public Converter<Concept, String> ApplicationConversionServiceFactoryBean.getConceptToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Concept, java.lang.String>() {
            public String convert(Concept concept) {
                return new StringBuilder().append(concept.getName()).append(' ').append(concept.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Concept> ApplicationConversionServiceFactoryBean.getIdToConceptConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.Concept>() {
            public ro.roda.Concept convert(java.lang.Long id) {
                return Concept.findConcept(id);
            }
        };
    }
    
    public Converter<String, Concept> ApplicationConversionServiceFactoryBean.getStringToConceptConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Concept>() {
            public ro.roda.Concept convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Concept.class);
            }
        };
    }
    
    public Converter<Country, String> ApplicationConversionServiceFactoryBean.getCountryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Country, java.lang.String>() {
            public String convert(Country country) {
                return new StringBuilder().append(country.getName()).append(' ').append(country.getAlpha3()).toString();
            }
        };
    }
    
    public Converter<String, Country> ApplicationConversionServiceFactoryBean.getIdToCountryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Country>() {
            public ro.roda.Country convert(java.lang.String id) {
                return Country.findCountry(id);
            }
        };
    }
    
    public Converter<Email, String> ApplicationConversionServiceFactoryBean.getEmailToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Email, java.lang.String>() {
            public String convert(Email email) {
                return new StringBuilder().append(email.getEmail()).toString();
            }
        };
    }
    
    public Converter<Integer, Email> ApplicationConversionServiceFactoryBean.getIdToEmailConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Email>() {
            public ro.roda.Email convert(java.lang.Integer id) {
                return Email.findEmail(id);
            }
        };
    }
    
    public Converter<String, Email> ApplicationConversionServiceFactoryBean.getStringToEmailConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Email>() {
            public ro.roda.Email convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Email.class);
            }
        };
    }
    
    public Converter<File, String> ApplicationConversionServiceFactoryBean.getFileToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.File, java.lang.String>() {
            public String convert(File file) {
                return new StringBuilder().append(file.getTitle()).append(' ').append(file.getDescription()).append(' ').append(file.getFiletypeId()).append(' ').append(file.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, File> ApplicationConversionServiceFactoryBean.getIdToFileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.File>() {
            public ro.roda.File convert(java.lang.Integer id) {
                return File.findFile(id);
            }
        };
    }
    
    public Converter<String, File> ApplicationConversionServiceFactoryBean.getStringToFileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.File>() {
            public ro.roda.File convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), File.class);
            }
        };
    }
    
    public Converter<FileAcl, String> ApplicationConversionServiceFactoryBean.getFileAclToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FileAcl, java.lang.String>() {
            public String convert(FileAcl fileAcl) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<FileAclPK, FileAcl> ApplicationConversionServiceFactoryBean.getIdToFileAclConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FileAclPK, ro.roda.FileAcl>() {
            public ro.roda.FileAcl convert(ro.roda.FileAclPK id) {
                return FileAcl.findFileAcl(id);
            }
        };
    }
    
    public Converter<String, FileAcl> ApplicationConversionServiceFactoryBean.getStringToFileAclConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.FileAcl>() {
            public ro.roda.FileAcl convert(String id) {
                return getObject().convert(getObject().convert(id, FileAclPK.class), FileAcl.class);
            }
        };
    }
    
    public Converter<FilePropertyNameValue, String> ApplicationConversionServiceFactoryBean.getFilePropertyNameValueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FilePropertyNameValue, java.lang.String>() {
            public String convert(FilePropertyNameValue filePropertyNameValue) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<FilePropertyNameValuePK, FilePropertyNameValue> ApplicationConversionServiceFactoryBean.getIdToFilePropertyNameValueConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FilePropertyNameValuePK, ro.roda.FilePropertyNameValue>() {
            public ro.roda.FilePropertyNameValue convert(ro.roda.FilePropertyNameValuePK id) {
                return FilePropertyNameValue.findFilePropertyNameValue(id);
            }
        };
    }
    
    public Converter<String, FilePropertyNameValue> ApplicationConversionServiceFactoryBean.getStringToFilePropertyNameValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.FilePropertyNameValue>() {
            public ro.roda.FilePropertyNameValue convert(String id) {
                return getObject().convert(getObject().convert(id, FilePropertyNameValuePK.class), FilePropertyNameValue.class);
            }
        };
    }
    
    public Converter<Form, String> ApplicationConversionServiceFactoryBean.getFormToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Form, java.lang.String>() {
            public String convert(Form form) {
                return new StringBuilder().append(form.getOrderInInstance()).append(' ').append(form.getOperatorNotes()).append(' ').append(form.getFillTime()).toString();
            }
        };
    }
    
    public Converter<Long, Form> ApplicationConversionServiceFactoryBean.getIdToFormConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.Form>() {
            public ro.roda.Form convert(java.lang.Long id) {
                return Form.findForm(id);
            }
        };
    }
    
    public Converter<String, Form> ApplicationConversionServiceFactoryBean.getStringToFormConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Form>() {
            public ro.roda.Form convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Form.class);
            }
        };
    }
    
    public Converter<FormEditedNumberVar, String> ApplicationConversionServiceFactoryBean.getFormEditedNumberVarToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FormEditedNumberVar, java.lang.String>() {
            public String convert(FormEditedNumberVar formEditedNumberVar) {
                return new StringBuilder().append(formEditedNumberVar.getValue()).toString();
            }
        };
    }
    
    public Converter<FormEditedNumberVarPK, FormEditedNumberVar> ApplicationConversionServiceFactoryBean.getIdToFormEditedNumberVarConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FormEditedNumberVarPK, ro.roda.FormEditedNumberVar>() {
            public ro.roda.FormEditedNumberVar convert(ro.roda.FormEditedNumberVarPK id) {
                return FormEditedNumberVar.findFormEditedNumberVar(id);
            }
        };
    }
    
    public Converter<String, FormEditedNumberVar> ApplicationConversionServiceFactoryBean.getStringToFormEditedNumberVarConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.FormEditedNumberVar>() {
            public ro.roda.FormEditedNumberVar convert(String id) {
                return getObject().convert(getObject().convert(id, FormEditedNumberVarPK.class), FormEditedNumberVar.class);
            }
        };
    }
    
    public Converter<FormEditedTextVar, String> ApplicationConversionServiceFactoryBean.getFormEditedTextVarToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FormEditedTextVar, java.lang.String>() {
            public String convert(FormEditedTextVar formEditedTextVar) {
                return new StringBuilder().append(formEditedTextVar.getText()).toString();
            }
        };
    }
    
    public Converter<FormEditedTextVarPK, FormEditedTextVar> ApplicationConversionServiceFactoryBean.getIdToFormEditedTextVarConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FormEditedTextVarPK, ro.roda.FormEditedTextVar>() {
            public ro.roda.FormEditedTextVar convert(ro.roda.FormEditedTextVarPK id) {
                return FormEditedTextVar.findFormEditedTextVar(id);
            }
        };
    }
    
    public Converter<String, FormEditedTextVar> ApplicationConversionServiceFactoryBean.getStringToFormEditedTextVarConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.FormEditedTextVar>() {
            public ro.roda.FormEditedTextVar convert(String id) {
                return getObject().convert(getObject().convert(id, FormEditedTextVarPK.class), FormEditedTextVar.class);
            }
        };
    }
    
    public Converter<FormSelectionVar, String> ApplicationConversionServiceFactoryBean.getFormSelectionVarToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FormSelectionVar, java.lang.String>() {
            public String convert(FormSelectionVar formSelectionVar) {
                return new StringBuilder().append(formSelectionVar.getOrderOfItemsInResponse()).toString();
            }
        };
    }
    
    public Converter<FormSelectionVarPK, FormSelectionVar> ApplicationConversionServiceFactoryBean.getIdToFormSelectionVarConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FormSelectionVarPK, ro.roda.FormSelectionVar>() {
            public ro.roda.FormSelectionVar convert(ro.roda.FormSelectionVarPK id) {
                return FormSelectionVar.findFormSelectionVar(id);
            }
        };
    }
    
    public Converter<String, FormSelectionVar> ApplicationConversionServiceFactoryBean.getStringToFormSelectionVarConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.FormSelectionVar>() {
            public ro.roda.FormSelectionVar convert(String id) {
                return getObject().convert(getObject().convert(id, FormSelectionVarPK.class), FormSelectionVar.class);
            }
        };
    }
    
    public Converter<Instance, String> ApplicationConversionServiceFactoryBean.getInstanceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Instance, java.lang.String>() {
            public String convert(Instance instance) {
                return new StringBuilder().append(instance.getDatestart()).append(' ').append(instance.getDateend()).append(' ').append(instance.getInsertionStatus()).append(' ').append(instance.getAdded()).toString();
            }
        };
    }
    
    public Converter<Integer, Instance> ApplicationConversionServiceFactoryBean.getIdToInstanceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Instance>() {
            public ro.roda.Instance convert(java.lang.Integer id) {
                return Instance.findInstance(id);
            }
        };
    }
    
    public Converter<String, Instance> ApplicationConversionServiceFactoryBean.getStringToInstanceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Instance>() {
            public ro.roda.Instance convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Instance.class);
            }
        };
    }
    
    public Converter<InstanceAcl, String> ApplicationConversionServiceFactoryBean.getInstanceAclToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceAcl, java.lang.String>() {
            public String convert(InstanceAcl instanceAcl) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<InstanceAclPK, InstanceAcl> ApplicationConversionServiceFactoryBean.getIdToInstanceAclConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceAclPK, ro.roda.InstanceAcl>() {
            public ro.roda.InstanceAcl convert(ro.roda.InstanceAclPK id) {
                return InstanceAcl.findInstanceAcl(id);
            }
        };
    }
    
    public Converter<String, InstanceAcl> ApplicationConversionServiceFactoryBean.getStringToInstanceAclConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstanceAcl>() {
            public ro.roda.InstanceAcl convert(String id) {
                return getObject().convert(getObject().convert(id, InstanceAclPK.class), InstanceAcl.class);
            }
        };
    }
    
    public Converter<InstanceDescr, String> ApplicationConversionServiceFactoryBean.getInstanceDescrToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceDescr, java.lang.String>() {
            public String convert(InstanceDescr instanceDescr) {
                return new StringBuilder().append(instanceDescr.getWeighting()).append(' ').append(instanceDescr.getResearchInstrument()).append(' ').append(instanceDescr.getScope()).append(' ').append(instanceDescr.getUniverse()).toString();
            }
        };
    }
    
    public Converter<InstanceDescrPK, InstanceDescr> ApplicationConversionServiceFactoryBean.getIdToInstanceDescrConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceDescrPK, ro.roda.InstanceDescr>() {
            public ro.roda.InstanceDescr convert(ro.roda.InstanceDescrPK id) {
                return InstanceDescr.findInstanceDescr(id);
            }
        };
    }
    
    public Converter<String, InstanceDescr> ApplicationConversionServiceFactoryBean.getStringToInstanceDescrConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstanceDescr>() {
            public ro.roda.InstanceDescr convert(String id) {
                return getObject().convert(getObject().convert(id, InstanceDescrPK.class), InstanceDescr.class);
            }
        };
    }
    
    public Converter<InstanceKeyword, String> ApplicationConversionServiceFactoryBean.getInstanceKeywordToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceKeyword, java.lang.String>() {
            public String convert(InstanceKeyword instanceKeyword) {
                return new StringBuilder().append(instanceKeyword.getAdded()).toString();
            }
        };
    }
    
    public Converter<InstanceKeywordPK, InstanceKeyword> ApplicationConversionServiceFactoryBean.getIdToInstanceKeywordConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceKeywordPK, ro.roda.InstanceKeyword>() {
            public ro.roda.InstanceKeyword convert(ro.roda.InstanceKeywordPK id) {
                return InstanceKeyword.findInstanceKeyword(id);
            }
        };
    }
    
    public Converter<String, InstanceKeyword> ApplicationConversionServiceFactoryBean.getStringToInstanceKeywordConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstanceKeyword>() {
            public ro.roda.InstanceKeyword convert(String id) {
                return getObject().convert(getObject().convert(id, InstanceKeywordPK.class), InstanceKeyword.class);
            }
        };
    }
    
    public Converter<InstanceOrg, String> ApplicationConversionServiceFactoryBean.getInstanceOrgToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceOrg, java.lang.String>() {
            public String convert(InstanceOrg instanceOrg) {
                return new StringBuilder().append(instanceOrg.getAssocDetails()).append(' ').append(instanceOrg.getCitation()).toString();
            }
        };
    }
    
    public Converter<InstanceOrgPK, InstanceOrg> ApplicationConversionServiceFactoryBean.getIdToInstanceOrgConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceOrgPK, ro.roda.InstanceOrg>() {
            public ro.roda.InstanceOrg convert(ro.roda.InstanceOrgPK id) {
                return InstanceOrg.findInstanceOrg(id);
            }
        };
    }
    
    public Converter<String, InstanceOrg> ApplicationConversionServiceFactoryBean.getStringToInstanceOrgConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstanceOrg>() {
            public ro.roda.InstanceOrg convert(String id) {
                return getObject().convert(getObject().convert(id, InstanceOrgPK.class), InstanceOrg.class);
            }
        };
    }
    
    public Converter<InstanceOrgAssoc, String> ApplicationConversionServiceFactoryBean.getInstanceOrgAssocToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceOrgAssoc, java.lang.String>() {
            public String convert(InstanceOrgAssoc instanceOrgAssoc) {
                return new StringBuilder().append(instanceOrgAssoc.getAssocName()).append(' ').append(instanceOrgAssoc.getAssocDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, InstanceOrgAssoc> ApplicationConversionServiceFactoryBean.getIdToInstanceOrgAssocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.InstanceOrgAssoc>() {
            public ro.roda.InstanceOrgAssoc convert(java.lang.Integer id) {
                return InstanceOrgAssoc.findInstanceOrgAssoc(id);
            }
        };
    }
    
    public Converter<String, InstanceOrgAssoc> ApplicationConversionServiceFactoryBean.getStringToInstanceOrgAssocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstanceOrgAssoc>() {
            public ro.roda.InstanceOrgAssoc convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), InstanceOrgAssoc.class);
            }
        };
    }
    
    public Converter<InstancePerson, String> ApplicationConversionServiceFactoryBean.getInstancePersonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstancePerson, java.lang.String>() {
            public String convert(InstancePerson instancePerson) {
                return new StringBuilder().append(instancePerson.getAssocDetails()).toString();
            }
        };
    }
    
    public Converter<InstancePersonPK, InstancePerson> ApplicationConversionServiceFactoryBean.getIdToInstancePersonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstancePersonPK, ro.roda.InstancePerson>() {
            public ro.roda.InstancePerson convert(ro.roda.InstancePersonPK id) {
                return InstancePerson.findInstancePerson(id);
            }
        };
    }
    
    public Converter<String, InstancePerson> ApplicationConversionServiceFactoryBean.getStringToInstancePersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstancePerson>() {
            public ro.roda.InstancePerson convert(String id) {
                return getObject().convert(getObject().convert(id, InstancePersonPK.class), InstancePerson.class);
            }
        };
    }
    
    public Converter<InstancePersonAssoc, String> ApplicationConversionServiceFactoryBean.getInstancePersonAssocToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstancePersonAssoc, java.lang.String>() {
            public String convert(InstancePersonAssoc instancePersonAssoc) {
                return new StringBuilder().append(instancePersonAssoc.getAssocName()).append(' ').append(instancePersonAssoc.getAssocDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, InstancePersonAssoc> ApplicationConversionServiceFactoryBean.getIdToInstancePersonAssocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.InstancePersonAssoc>() {
            public ro.roda.InstancePersonAssoc convert(java.lang.Integer id) {
                return InstancePersonAssoc.findInstancePersonAssoc(id);
            }
        };
    }
    
    public Converter<String, InstancePersonAssoc> ApplicationConversionServiceFactoryBean.getStringToInstancePersonAssocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstancePersonAssoc>() {
            public ro.roda.InstancePersonAssoc convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), InstancePersonAssoc.class);
            }
        };
    }
    
    public Converter<Internet, String> ApplicationConversionServiceFactoryBean.getInternetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Internet, java.lang.String>() {
            public String convert(Internet internet) {
                return new StringBuilder().append(internet.getInternetType()).append(' ').append(internet.getInternet()).toString();
            }
        };
    }
    
    public Converter<Integer, Internet> ApplicationConversionServiceFactoryBean.getIdToInternetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Internet>() {
            public ro.roda.Internet convert(java.lang.Integer id) {
                return Internet.findInternet(id);
            }
        };
    }
    
    public Converter<String, Internet> ApplicationConversionServiceFactoryBean.getStringToInternetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Internet>() {
            public ro.roda.Internet convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Internet.class);
            }
        };
    }
    
    public Converter<Item, String> ApplicationConversionServiceFactoryBean.getItemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Item, java.lang.String>() {
            public String convert(Item item) {
                return new StringBuilder().append(item.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Item> ApplicationConversionServiceFactoryBean.getIdToItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.Item>() {
            public ro.roda.Item convert(java.lang.Long id) {
                return Item.findItem(id);
            }
        };
    }
    
    public Converter<String, Item> ApplicationConversionServiceFactoryBean.getStringToItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Item>() {
            public ro.roda.Item convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Item.class);
            }
        };
    }
    
    public Converter<Keyword, String> ApplicationConversionServiceFactoryBean.getKeywordToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Keyword, java.lang.String>() {
            public String convert(Keyword keyword) {
                return new StringBuilder().append(keyword.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, Keyword> ApplicationConversionServiceFactoryBean.getIdToKeywordConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Keyword>() {
            public ro.roda.Keyword convert(java.lang.Integer id) {
                return Keyword.findKeyword(id);
            }
        };
    }
    
    public Converter<String, Keyword> ApplicationConversionServiceFactoryBean.getStringToKeywordConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Keyword>() {
            public ro.roda.Keyword convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Keyword.class);
            }
        };
    }
    
    public Converter<Lang, String> ApplicationConversionServiceFactoryBean.getLangToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Lang, java.lang.String>() {
            public String convert(Lang lang) {
                return new StringBuilder().append(lang.getName()).toString();
            }
        };
    }
    
    public Converter<String, Lang> ApplicationConversionServiceFactoryBean.getIdToLangConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Lang>() {
            public ro.roda.Lang convert(java.lang.String id) {
                return Lang.findLang(id);
            }
        };
    }
    
    public Converter<News, String> ApplicationConversionServiceFactoryBean.getNewsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.News, java.lang.String>() {
            public String convert(News news) {
                return new StringBuilder().append(news.getAdded()).append(' ').append(news.getTitle()).append(' ').append(news.getContent()).toString();
            }
        };
    }
    
    public Converter<Integer, News> ApplicationConversionServiceFactoryBean.getIdToNewsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.News>() {
            public ro.roda.News convert(java.lang.Integer id) {
                return News.findNews(id);
            }
        };
    }
    
    public Converter<String, News> ApplicationConversionServiceFactoryBean.getStringToNewsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.News>() {
            public ro.roda.News convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), News.class);
            }
        };
    }
    
    public Converter<Org, String> ApplicationConversionServiceFactoryBean.getOrgToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Org, java.lang.String>() {
            public String convert(Org org) {
                return new StringBuilder().append(org.getName()).append(' ').append(org.getFullname()).toString();
            }
        };
    }
    
    public Converter<Integer, Org> ApplicationConversionServiceFactoryBean.getIdToOrgConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Org>() {
            public ro.roda.Org convert(java.lang.Integer id) {
                return Org.findOrg(id);
            }
        };
    }
    
    public Converter<String, Org> ApplicationConversionServiceFactoryBean.getStringToOrgConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Org>() {
            public ro.roda.Org convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Org.class);
            }
        };
    }
    
    public Converter<OrgAddress, String> ApplicationConversionServiceFactoryBean.getOrgAddressToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgAddress, java.lang.String>() {
            public String convert(OrgAddress orgAddress) {
                return new StringBuilder().append(orgAddress.getDatestart()).append(' ').append(orgAddress.getDateend()).toString();
            }
        };
    }
    
    public Converter<OrgAddressPK, OrgAddress> ApplicationConversionServiceFactoryBean.getIdToOrgAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgAddressPK, ro.roda.OrgAddress>() {
            public ro.roda.OrgAddress convert(ro.roda.OrgAddressPK id) {
                return OrgAddress.findOrgAddress(id);
            }
        };
    }
    
    public Converter<String, OrgAddress> ApplicationConversionServiceFactoryBean.getStringToOrgAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgAddress>() {
            public ro.roda.OrgAddress convert(String id) {
                return getObject().convert(getObject().convert(id, OrgAddressPK.class), OrgAddress.class);
            }
        };
    }
    
    public Converter<OrgEmail, String> ApplicationConversionServiceFactoryBean.getOrgEmailToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgEmail, java.lang.String>() {
            public String convert(OrgEmail orgEmail) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<OrgEmailPK, OrgEmail> ApplicationConversionServiceFactoryBean.getIdToOrgEmailConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgEmailPK, ro.roda.OrgEmail>() {
            public ro.roda.OrgEmail convert(ro.roda.OrgEmailPK id) {
                return OrgEmail.findOrgEmail(id);
            }
        };
    }
    
    public Converter<String, OrgEmail> ApplicationConversionServiceFactoryBean.getStringToOrgEmailConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgEmail>() {
            public ro.roda.OrgEmail convert(String id) {
                return getObject().convert(getObject().convert(id, OrgEmailPK.class), OrgEmail.class);
            }
        };
    }
    
    public Converter<OrgInternet, String> ApplicationConversionServiceFactoryBean.getOrgInternetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgInternet, java.lang.String>() {
            public String convert(OrgInternet orgInternet) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<OrgInternetPK, OrgInternet> ApplicationConversionServiceFactoryBean.getIdToOrgInternetConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgInternetPK, ro.roda.OrgInternet>() {
            public ro.roda.OrgInternet convert(ro.roda.OrgInternetPK id) {
                return OrgInternet.findOrgInternet(id);
            }
        };
    }
    
    public Converter<String, OrgInternet> ApplicationConversionServiceFactoryBean.getStringToOrgInternetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgInternet>() {
            public ro.roda.OrgInternet convert(String id) {
                return getObject().convert(getObject().convert(id, OrgInternetPK.class), OrgInternet.class);
            }
        };
    }
    
    public Converter<OrgPhone, String> ApplicationConversionServiceFactoryBean.getOrgPhoneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgPhone, java.lang.String>() {
            public String convert(OrgPhone orgPhone) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<OrgPhonePK, OrgPhone> ApplicationConversionServiceFactoryBean.getIdToOrgPhoneConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgPhonePK, ro.roda.OrgPhone>() {
            public ro.roda.OrgPhone convert(ro.roda.OrgPhonePK id) {
                return OrgPhone.findOrgPhone(id);
            }
        };
    }
    
    public Converter<String, OrgPhone> ApplicationConversionServiceFactoryBean.getStringToOrgPhoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgPhone>() {
            public ro.roda.OrgPhone convert(String id) {
                return getObject().convert(getObject().convert(id, OrgPhonePK.class), OrgPhone.class);
            }
        };
    }
    
    public Converter<OrgPrefix, String> ApplicationConversionServiceFactoryBean.getOrgPrefixToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgPrefix, java.lang.String>() {
            public String convert(OrgPrefix orgPrefix) {
                return new StringBuilder().append(orgPrefix.getName()).append(' ').append(orgPrefix.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, OrgPrefix> ApplicationConversionServiceFactoryBean.getIdToOrgPrefixConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.OrgPrefix>() {
            public ro.roda.OrgPrefix convert(java.lang.Integer id) {
                return OrgPrefix.findOrgPrefix(id);
            }
        };
    }
    
    public Converter<String, OrgPrefix> ApplicationConversionServiceFactoryBean.getStringToOrgPrefixConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgPrefix>() {
            public ro.roda.OrgPrefix convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), OrgPrefix.class);
            }
        };
    }
    
    public Converter<OrgRelationType, String> ApplicationConversionServiceFactoryBean.getOrgRelationTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgRelationType, java.lang.String>() {
            public String convert(OrgRelationType orgRelationType) {
                return new StringBuilder().append(orgRelationType.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, OrgRelationType> ApplicationConversionServiceFactoryBean.getIdToOrgRelationTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.OrgRelationType>() {
            public ro.roda.OrgRelationType convert(java.lang.Integer id) {
                return OrgRelationType.findOrgRelationType(id);
            }
        };
    }
    
    public Converter<String, OrgRelationType> ApplicationConversionServiceFactoryBean.getStringToOrgRelationTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgRelationType>() {
            public ro.roda.OrgRelationType convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), OrgRelationType.class);
            }
        };
    }
    
    public Converter<OrgRelations, String> ApplicationConversionServiceFactoryBean.getOrgRelationsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgRelations, java.lang.String>() {
            public String convert(OrgRelations orgRelations) {
                return new StringBuilder().append(orgRelations.getDatestart()).append(' ').append(orgRelations.getDateend()).append(' ').append(orgRelations.getDetails()).toString();
            }
        };
    }
    
    public Converter<OrgRelationsPK, OrgRelations> ApplicationConversionServiceFactoryBean.getIdToOrgRelationsConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgRelationsPK, ro.roda.OrgRelations>() {
            public ro.roda.OrgRelations convert(ro.roda.OrgRelationsPK id) {
                return OrgRelations.findOrgRelations(id);
            }
        };
    }
    
    public Converter<String, OrgRelations> ApplicationConversionServiceFactoryBean.getStringToOrgRelationsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgRelations>() {
            public ro.roda.OrgRelations convert(String id) {
                return getObject().convert(getObject().convert(id, OrgRelationsPK.class), OrgRelations.class);
            }
        };
    }
    
    public Converter<OrgSufix, String> ApplicationConversionServiceFactoryBean.getOrgSufixToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgSufix, java.lang.String>() {
            public String convert(OrgSufix orgSufix) {
                return new StringBuilder().append(orgSufix.getName()).append(' ').append(orgSufix.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, OrgSufix> ApplicationConversionServiceFactoryBean.getIdToOrgSufixConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.OrgSufix>() {
            public ro.roda.OrgSufix convert(java.lang.Integer id) {
                return OrgSufix.findOrgSufix(id);
            }
        };
    }
    
    public Converter<String, OrgSufix> ApplicationConversionServiceFactoryBean.getStringToOrgSufixConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgSufix>() {
            public ro.roda.OrgSufix convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), OrgSufix.class);
            }
        };
    }
    
    public Converter<OtherStatistic, String> ApplicationConversionServiceFactoryBean.getOtherStatisticToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OtherStatistic, java.lang.String>() {
            public String convert(OtherStatistic otherStatistic) {
                return new StringBuilder().append(otherStatistic.getName()).append(' ').append(otherStatistic.getValue()).append(' ').append(otherStatistic.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, OtherStatistic> ApplicationConversionServiceFactoryBean.getIdToOtherStatisticConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.OtherStatistic>() {
            public ro.roda.OtherStatistic convert(java.lang.Long id) {
                return OtherStatistic.findOtherStatistic(id);
            }
        };
    }
    
    public Converter<String, OtherStatistic> ApplicationConversionServiceFactoryBean.getStringToOtherStatisticConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OtherStatistic>() {
            public ro.roda.OtherStatistic convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), OtherStatistic.class);
            }
        };
    }
    
    public Converter<Person, String> ApplicationConversionServiceFactoryBean.getPersonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Person, java.lang.String>() {
            public String convert(Person person) {
                return new StringBuilder().append(person.getFname()).append(' ').append(person.getMname()).append(' ').append(person.getLname()).toString();
            }
        };
    }
    
    public Converter<Integer, Person> ApplicationConversionServiceFactoryBean.getIdToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Person>() {
            public ro.roda.Person convert(java.lang.Integer id) {
                return Person.findPerson(id);
            }
        };
    }
    
    public Converter<String, Person> ApplicationConversionServiceFactoryBean.getStringToPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Person>() {
            public ro.roda.Person convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Person.class);
            }
        };
    }
    
    public Converter<PersonAddress, String> ApplicationConversionServiceFactoryBean.getPersonAddressToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonAddress, java.lang.String>() {
            public String convert(PersonAddress personAddress) {
                return new StringBuilder().append(personAddress.getDatestart()).append(' ').append(personAddress.getDateend()).toString();
            }
        };
    }
    
    public Converter<PersonAddressPK, PersonAddress> ApplicationConversionServiceFactoryBean.getIdToPersonAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonAddressPK, ro.roda.PersonAddress>() {
            public ro.roda.PersonAddress convert(ro.roda.PersonAddressPK id) {
                return PersonAddress.findPersonAddress(id);
            }
        };
    }
    
    public Converter<String, PersonAddress> ApplicationConversionServiceFactoryBean.getStringToPersonAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonAddress>() {
            public ro.roda.PersonAddress convert(String id) {
                return getObject().convert(getObject().convert(id, PersonAddressPK.class), PersonAddress.class);
            }
        };
    }
    
    public Converter<PersonEmail, String> ApplicationConversionServiceFactoryBean.getPersonEmailToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonEmail, java.lang.String>() {
            public String convert(PersonEmail personEmail) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<PersonEmailPK, PersonEmail> ApplicationConversionServiceFactoryBean.getIdToPersonEmailConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonEmailPK, ro.roda.PersonEmail>() {
            public ro.roda.PersonEmail convert(ro.roda.PersonEmailPK id) {
                return PersonEmail.findPersonEmail(id);
            }
        };
    }
    
    public Converter<String, PersonEmail> ApplicationConversionServiceFactoryBean.getStringToPersonEmailConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonEmail>() {
            public ro.roda.PersonEmail convert(String id) {
                return getObject().convert(getObject().convert(id, PersonEmailPK.class), PersonEmail.class);
            }
        };
    }
    
    public Converter<PersonInternet, String> ApplicationConversionServiceFactoryBean.getPersonInternetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonInternet, java.lang.String>() {
            public String convert(PersonInternet personInternet) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<PersonInternetPK, PersonInternet> ApplicationConversionServiceFactoryBean.getIdToPersonInternetConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonInternetPK, ro.roda.PersonInternet>() {
            public ro.roda.PersonInternet convert(ro.roda.PersonInternetPK id) {
                return PersonInternet.findPersonInternet(id);
            }
        };
    }
    
    public Converter<String, PersonInternet> ApplicationConversionServiceFactoryBean.getStringToPersonInternetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonInternet>() {
            public ro.roda.PersonInternet convert(String id) {
                return getObject().convert(getObject().convert(id, PersonInternetPK.class), PersonInternet.class);
            }
        };
    }
    
    public Converter<PersonLinks, String> ApplicationConversionServiceFactoryBean.getPersonLinksToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonLinks, java.lang.String>() {
            public String convert(PersonLinks personLinks) {
                return new StringBuilder().append(personLinks.getSimscore()).append(' ').append(personLinks.getNamescore()).append(' ').append(personLinks.getEmailscore()).append(' ').append(personLinks.getStatus()).toString();
            }
        };
    }
    
    public Converter<Integer, PersonLinks> ApplicationConversionServiceFactoryBean.getIdToPersonLinksConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.PersonLinks>() {
            public ro.roda.PersonLinks convert(java.lang.Integer id) {
                return PersonLinks.findPersonLinks(id);
            }
        };
    }
    
    public Converter<String, PersonLinks> ApplicationConversionServiceFactoryBean.getStringToPersonLinksConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonLinks>() {
            public ro.roda.PersonLinks convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), PersonLinks.class);
            }
        };
    }
    
    public Converter<PersonOrg, String> ApplicationConversionServiceFactoryBean.getPersonOrgToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonOrg, java.lang.String>() {
            public String convert(PersonOrg personOrg) {
                return new StringBuilder().append(personOrg.getDatestart()).append(' ').append(personOrg.getDateend()).toString();
            }
        };
    }
    
    public Converter<PersonOrgPK, PersonOrg> ApplicationConversionServiceFactoryBean.getIdToPersonOrgConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonOrgPK, ro.roda.PersonOrg>() {
            public ro.roda.PersonOrg convert(ro.roda.PersonOrgPK id) {
                return PersonOrg.findPersonOrg(id);
            }
        };
    }
    
    public Converter<String, PersonOrg> ApplicationConversionServiceFactoryBean.getStringToPersonOrgConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonOrg>() {
            public ro.roda.PersonOrg convert(String id) {
                return getObject().convert(getObject().convert(id, PersonOrgPK.class), PersonOrg.class);
            }
        };
    }
    
    public Converter<PersonPhone, String> ApplicationConversionServiceFactoryBean.getPersonPhoneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonPhone, java.lang.String>() {
            public String convert(PersonPhone personPhone) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<PersonPhonePK, PersonPhone> ApplicationConversionServiceFactoryBean.getIdToPersonPhoneConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonPhonePK, ro.roda.PersonPhone>() {
            public ro.roda.PersonPhone convert(ro.roda.PersonPhonePK id) {
                return PersonPhone.findPersonPhone(id);
            }
        };
    }
    
    public Converter<String, PersonPhone> ApplicationConversionServiceFactoryBean.getStringToPersonPhoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonPhone>() {
            public ro.roda.PersonPhone convert(String id) {
                return getObject().convert(getObject().convert(id, PersonPhonePK.class), PersonPhone.class);
            }
        };
    }
    
    public Converter<PersonRole, String> ApplicationConversionServiceFactoryBean.getPersonRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonRole, java.lang.String>() {
            public String convert(PersonRole personRole) {
                return new StringBuilder().append(personRole.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, PersonRole> ApplicationConversionServiceFactoryBean.getIdToPersonRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.PersonRole>() {
            public ro.roda.PersonRole convert(java.lang.Integer id) {
                return PersonRole.findPersonRole(id);
            }
        };
    }
    
    public Converter<String, PersonRole> ApplicationConversionServiceFactoryBean.getStringToPersonRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonRole>() {
            public ro.roda.PersonRole convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), PersonRole.class);
            }
        };
    }
    
    public Converter<Phone, String> ApplicationConversionServiceFactoryBean.getPhoneToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Phone, java.lang.String>() {
            public String convert(Phone phone) {
                return new StringBuilder().append(phone.getPhone()).append(' ').append(phone.getPhoneType()).toString();
            }
        };
    }
    
    public Converter<Integer, Phone> ApplicationConversionServiceFactoryBean.getIdToPhoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Phone>() {
            public ro.roda.Phone convert(java.lang.Integer id) {
                return Phone.findPhone(id);
            }
        };
    }
    
    public Converter<String, Phone> ApplicationConversionServiceFactoryBean.getStringToPhoneConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Phone>() {
            public ro.roda.Phone convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Phone.class);
            }
        };
    }
    
    public Converter<Prefix, String> ApplicationConversionServiceFactoryBean.getPrefixToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Prefix, java.lang.String>() {
            public String convert(Prefix prefix) {
                return new StringBuilder().append(prefix.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, Prefix> ApplicationConversionServiceFactoryBean.getIdToPrefixConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Prefix>() {
            public ro.roda.Prefix convert(java.lang.Integer id) {
                return Prefix.findPrefix(id);
            }
        };
    }
    
    public Converter<String, Prefix> ApplicationConversionServiceFactoryBean.getStringToPrefixConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Prefix>() {
            public ro.roda.Prefix convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Prefix.class);
            }
        };
    }
    
    public Converter<PropertyName, String> ApplicationConversionServiceFactoryBean.getPropertyNameToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PropertyName, java.lang.String>() {
            public String convert(PropertyName propertyName) {
                return new StringBuilder().append(propertyName.getName()).append(' ').append(propertyName.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, PropertyName> ApplicationConversionServiceFactoryBean.getIdToPropertyNameConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.PropertyName>() {
            public ro.roda.PropertyName convert(java.lang.Integer id) {
                return PropertyName.findPropertyName(id);
            }
        };
    }
    
    public Converter<String, PropertyName> ApplicationConversionServiceFactoryBean.getStringToPropertyNameConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PropertyName>() {
            public ro.roda.PropertyName convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), PropertyName.class);
            }
        };
    }
    
    public Converter<PropertyValue, String> ApplicationConversionServiceFactoryBean.getPropertyValueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PropertyValue, java.lang.String>() {
            public String convert(PropertyValue propertyValue) {
                return new StringBuilder().append(propertyValue.getValue()).toString();
            }
        };
    }
    
    public Converter<Integer, PropertyValue> ApplicationConversionServiceFactoryBean.getIdToPropertyValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.PropertyValue>() {
            public ro.roda.PropertyValue convert(java.lang.Integer id) {
                return PropertyValue.findPropertyValue(id);
            }
        };
    }
    
    public Converter<String, PropertyValue> ApplicationConversionServiceFactoryBean.getStringToPropertyValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PropertyValue>() {
            public ro.roda.PropertyValue convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), PropertyValue.class);
            }
        };
    }
    
    public Converter<Region, String> ApplicationConversionServiceFactoryBean.getRegionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Region, java.lang.String>() {
            public String convert(Region region) {
                return new StringBuilder().append(region.getName()).append(' ').append(region.getRegionCode()).append(' ').append(region.getRegionCodeName()).toString();
            }
        };
    }
    
    public Converter<Integer, Region> ApplicationConversionServiceFactoryBean.getIdToRegionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Region>() {
            public ro.roda.Region convert(java.lang.Integer id) {
                return Region.findRegion(id);
            }
        };
    }
    
    public Converter<String, Region> ApplicationConversionServiceFactoryBean.getStringToRegionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Region>() {
            public ro.roda.Region convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Region.class);
            }
        };
    }
    
    public Converter<Regiontype, String> ApplicationConversionServiceFactoryBean.getRegiontypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Regiontype, java.lang.String>() {
            public String convert(Regiontype regiontype) {
                return new StringBuilder().append(regiontype.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, Regiontype> ApplicationConversionServiceFactoryBean.getIdToRegiontypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Regiontype>() {
            public ro.roda.Regiontype convert(java.lang.Integer id) {
                return Regiontype.findRegiontype(id);
            }
        };
    }
    
    public Converter<String, Regiontype> ApplicationConversionServiceFactoryBean.getStringToRegiontypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Regiontype>() {
            public ro.roda.Regiontype convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Regiontype.class);
            }
        };
    }
    
    public Converter<Role, String> ApplicationConversionServiceFactoryBean.getRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Role, java.lang.String>() {
            public String convert(Role role) {
                return new StringBuilder().append(role.getName()).append(' ').append(role.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, Role> ApplicationConversionServiceFactoryBean.getIdToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Role>() {
            public ro.roda.Role convert(java.lang.Integer id) {
                return Role.findRole(id);
            }
        };
    }
    
    public Converter<String, Role> ApplicationConversionServiceFactoryBean.getStringToRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Role>() {
            public ro.roda.Role convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Role.class);
            }
        };
    }
    
    public Converter<SamplingProcedure, String> ApplicationConversionServiceFactoryBean.getSamplingProcedureToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SamplingProcedure, java.lang.String>() {
            public String convert(SamplingProcedure samplingProcedure) {
                return new StringBuilder().append(samplingProcedure.getName()).append(' ').append(samplingProcedure.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, SamplingProcedure> ApplicationConversionServiceFactoryBean.getIdToSamplingProcedureConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.SamplingProcedure>() {
            public ro.roda.SamplingProcedure convert(java.lang.Integer id) {
                return SamplingProcedure.findSamplingProcedure(id);
            }
        };
    }
    
    public Converter<String, SamplingProcedure> ApplicationConversionServiceFactoryBean.getStringToSamplingProcedureConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SamplingProcedure>() {
            public ro.roda.SamplingProcedure convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SamplingProcedure.class);
            }
        };
    }
    
    public Converter<Scale, String> ApplicationConversionServiceFactoryBean.getScaleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Scale, java.lang.String>() {
            public String convert(Scale scale) {
                return new StringBuilder().append(scale.getUnits()).toString();
            }
        };
    }
    
    public Converter<Long, Scale> ApplicationConversionServiceFactoryBean.getIdToScaleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.Scale>() {
            public ro.roda.Scale convert(java.lang.Long id) {
                return Scale.findScale(id);
            }
        };
    }
    
    public Converter<String, Scale> ApplicationConversionServiceFactoryBean.getStringToScaleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Scale>() {
            public ro.roda.Scale convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Scale.class);
            }
        };
    }
    
    public Converter<SelectionVariable, String> ApplicationConversionServiceFactoryBean.getSelectionVariableToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SelectionVariable, java.lang.String>() {
            public String convert(SelectionVariable selectionVariable) {
                return new StringBuilder().append(selectionVariable.getMinCount()).append(' ').append(selectionVariable.getMaxCount()).toString();
            }
        };
    }
    
    public Converter<Long, SelectionVariable> ApplicationConversionServiceFactoryBean.getIdToSelectionVariableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.SelectionVariable>() {
            public ro.roda.SelectionVariable convert(java.lang.Long id) {
                return SelectionVariable.findSelectionVariable(id);
            }
        };
    }
    
    public Converter<String, SelectionVariable> ApplicationConversionServiceFactoryBean.getStringToSelectionVariableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SelectionVariable>() {
            public ro.roda.SelectionVariable convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), SelectionVariable.class);
            }
        };
    }
    
    public Converter<SelectionVariableItem, String> ApplicationConversionServiceFactoryBean.getSelectionVariableItemToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SelectionVariableItem, java.lang.String>() {
            public String convert(SelectionVariableItem selectionVariableItem) {
                return new StringBuilder().append(selectionVariableItem.getOrderOfItemInVariable()).append(' ').append(selectionVariableItem.getFrequencyValue()).toString();
            }
        };
    }
    
    public Converter<SelectionVariableItemPK, SelectionVariableItem> ApplicationConversionServiceFactoryBean.getIdToSelectionVariableItemConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SelectionVariableItemPK, ro.roda.SelectionVariableItem>() {
            public ro.roda.SelectionVariableItem convert(ro.roda.SelectionVariableItemPK id) {
                return SelectionVariableItem.findSelectionVariableItem(id);
            }
        };
    }
    
    public Converter<String, SelectionVariableItem> ApplicationConversionServiceFactoryBean.getStringToSelectionVariableItemConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SelectionVariableItem>() {
            public ro.roda.SelectionVariableItem convert(String id) {
                return getObject().convert(getObject().convert(id, SelectionVariableItemPK.class), SelectionVariableItem.class);
            }
        };
    }
    
    public Converter<Setting, String> ApplicationConversionServiceFactoryBean.getSettingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Setting, java.lang.String>() {
            public String convert(Setting setting) {
                return new StringBuilder().append(setting.getName()).append(' ').append(setting.getDescription()).append(' ').append(setting.getPredefinedValues()).append(' ').append(setting.getDefaultValue()).toString();
            }
        };
    }
    
    public Converter<Integer, Setting> ApplicationConversionServiceFactoryBean.getIdToSettingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Setting>() {
            public ro.roda.Setting convert(java.lang.Integer id) {
                return Setting.findSetting(id);
            }
        };
    }
    
    public Converter<String, Setting> ApplicationConversionServiceFactoryBean.getStringToSettingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Setting>() {
            public ro.roda.Setting convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Setting.class);
            }
        };
    }
    
    public Converter<SettingGroup, String> ApplicationConversionServiceFactoryBean.getSettingGroupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SettingGroup, java.lang.String>() {
            public String convert(SettingGroup settingGroup) {
                return new StringBuilder().append(settingGroup.getName()).append(' ').append(settingGroup.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, SettingGroup> ApplicationConversionServiceFactoryBean.getIdToSettingGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.SettingGroup>() {
            public ro.roda.SettingGroup convert(java.lang.Integer id) {
                return SettingGroup.findSettingGroup(id);
            }
        };
    }
    
    public Converter<String, SettingGroup> ApplicationConversionServiceFactoryBean.getStringToSettingGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SettingGroup>() {
            public ro.roda.SettingGroup convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SettingGroup.class);
            }
        };
    }
    
    public Converter<SettingValue, String> ApplicationConversionServiceFactoryBean.getSettingValueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SettingValue, java.lang.String>() {
            public String convert(SettingValue settingValue) {
                return new StringBuilder().append(settingValue.getValue()).toString();
            }
        };
    }
    
    public Converter<Integer, SettingValue> ApplicationConversionServiceFactoryBean.getIdToSettingValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.SettingValue>() {
            public ro.roda.SettingValue convert(java.lang.Integer id) {
                return SettingValue.findSettingValue(id);
            }
        };
    }
    
    public Converter<String, SettingValue> ApplicationConversionServiceFactoryBean.getStringToSettingValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SettingValue>() {
            public ro.roda.SettingValue convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SettingValue.class);
            }
        };
    }
    
    public Converter<Skip, String> ApplicationConversionServiceFactoryBean.getSkipToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Skip, java.lang.String>() {
            public String convert(Skip skip) {
                return new StringBuilder().append(skip.getCondition()).toString();
            }
        };
    }
    
    public Converter<Long, Skip> ApplicationConversionServiceFactoryBean.getIdToSkipConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.Skip>() {
            public ro.roda.Skip convert(java.lang.Long id) {
                return Skip.findSkip(id);
            }
        };
    }
    
    public Converter<String, Skip> ApplicationConversionServiceFactoryBean.getStringToSkipConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Skip>() {
            public ro.roda.Skip convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Skip.class);
            }
        };
    }
    
    public Converter<Source, String> ApplicationConversionServiceFactoryBean.getSourceToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Source, java.lang.String>() {
            public String convert(Source source) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Integer, Source> ApplicationConversionServiceFactoryBean.getIdToSourceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Source>() {
            public ro.roda.Source convert(java.lang.Integer id) {
                return Source.findSource(id);
            }
        };
    }
    
    public Converter<String, Source> ApplicationConversionServiceFactoryBean.getStringToSourceConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Source>() {
            public ro.roda.Source convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Source.class);
            }
        };
    }
    
    public Converter<SourceContactMethod, String> ApplicationConversionServiceFactoryBean.getSourceContactMethodToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SourceContactMethod, java.lang.String>() {
            public String convert(SourceContactMethod sourceContactMethod) {
                return new StringBuilder().append(sourceContactMethod.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, SourceContactMethod> ApplicationConversionServiceFactoryBean.getIdToSourceContactMethodConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.SourceContactMethod>() {
            public ro.roda.SourceContactMethod convert(java.lang.Integer id) {
                return SourceContactMethod.findSourceContactMethod(id);
            }
        };
    }
    
    public Converter<String, SourceContactMethod> ApplicationConversionServiceFactoryBean.getStringToSourceContactMethodConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SourceContactMethod>() {
            public ro.roda.SourceContactMethod convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SourceContactMethod.class);
            }
        };
    }
    
    public Converter<SourceContacts, String> ApplicationConversionServiceFactoryBean.getSourceContactsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SourceContacts, java.lang.String>() {
            public String convert(SourceContacts sourceContacts) {
                return new StringBuilder().append(sourceContacts.getContactDate()).append(' ').append(sourceContacts.getSynopsis()).append(' ').append(sourceContacts.getFollowup()).toString();
            }
        };
    }
    
    public Converter<Integer, SourceContacts> ApplicationConversionServiceFactoryBean.getIdToSourceContactsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.SourceContacts>() {
            public ro.roda.SourceContacts convert(java.lang.Integer id) {
                return SourceContacts.findSourceContacts(id);
            }
        };
    }
    
    public Converter<String, SourceContacts> ApplicationConversionServiceFactoryBean.getStringToSourceContactsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SourceContacts>() {
            public ro.roda.SourceContacts convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SourceContacts.class);
            }
        };
    }
    
    public Converter<Sourcestudy, String> ApplicationConversionServiceFactoryBean.getSourcestudyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Sourcestudy, java.lang.String>() {
            public String convert(Sourcestudy sourcestudy) {
                return new StringBuilder().append(sourcestudy.getName()).append(' ').append(sourcestudy.getDetails()).toString();
            }
        };
    }
    
    public Converter<Integer, Sourcestudy> ApplicationConversionServiceFactoryBean.getIdToSourcestudyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Sourcestudy>() {
            public ro.roda.Sourcestudy convert(java.lang.Integer id) {
                return Sourcestudy.findSourcestudy(id);
            }
        };
    }
    
    public Converter<String, Sourcestudy> ApplicationConversionServiceFactoryBean.getStringToSourcestudyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Sourcestudy>() {
            public ro.roda.Sourcestudy convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Sourcestudy.class);
            }
        };
    }
    
    public Converter<SourcestudyType, String> ApplicationConversionServiceFactoryBean.getSourcestudyTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SourcestudyType, java.lang.String>() {
            public String convert(SourcestudyType sourcestudyType) {
                return new StringBuilder().append(sourcestudyType.getName()).append(' ').append(sourcestudyType.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, SourcestudyType> ApplicationConversionServiceFactoryBean.getIdToSourcestudyTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.SourcestudyType>() {
            public ro.roda.SourcestudyType convert(java.lang.Integer id) {
                return SourcestudyType.findSourcestudyType(id);
            }
        };
    }
    
    public Converter<String, SourcestudyType> ApplicationConversionServiceFactoryBean.getStringToSourcestudyTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SourcestudyType>() {
            public ro.roda.SourcestudyType convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SourcestudyType.class);
            }
        };
    }
    
    public Converter<SourcestudyTypeHistory, String> ApplicationConversionServiceFactoryBean.getSourcestudyTypeHistoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SourcestudyTypeHistory, java.lang.String>() {
            public String convert(SourcestudyTypeHistory sourcestudyTypeHistory) {
                return new StringBuilder().append(sourcestudyTypeHistory.getDatestart()).append(' ').append(sourcestudyTypeHistory.getDateend()).toString();
            }
        };
    }
    
    public Converter<Integer, SourcestudyTypeHistory> ApplicationConversionServiceFactoryBean.getIdToSourcestudyTypeHistoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.SourcestudyTypeHistory>() {
            public ro.roda.SourcestudyTypeHistory convert(java.lang.Integer id) {
                return SourcestudyTypeHistory.findSourcestudyTypeHistory(id);
            }
        };
    }
    
    public Converter<String, SourcestudyTypeHistory> ApplicationConversionServiceFactoryBean.getStringToSourcestudyTypeHistoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SourcestudyTypeHistory>() {
            public ro.roda.SourcestudyTypeHistory convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SourcestudyTypeHistory.class);
            }
        };
    }
    
    public Converter<Sourcetype, String> ApplicationConversionServiceFactoryBean.getSourcetypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Sourcetype, java.lang.String>() {
            public String convert(Sourcetype sourcetype) {
                return new StringBuilder().append(sourcetype.getName()).append(' ').append(sourcetype.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, Sourcetype> ApplicationConversionServiceFactoryBean.getIdToSourcetypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Sourcetype>() {
            public ro.roda.Sourcetype convert(java.lang.Integer id) {
                return Sourcetype.findSourcetype(id);
            }
        };
    }
    
    public Converter<String, Sourcetype> ApplicationConversionServiceFactoryBean.getStringToSourcetypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Sourcetype>() {
            public ro.roda.Sourcetype convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Sourcetype.class);
            }
        };
    }
    
    public Converter<SourcetypeHistory, String> ApplicationConversionServiceFactoryBean.getSourcetypeHistoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SourcetypeHistory, java.lang.String>() {
            public String convert(SourcetypeHistory sourcetypeHistory) {
                return new StringBuilder().append(sourcetypeHistory.getDatestart()).append(' ').append(sourcetypeHistory.getDateend()).toString();
            }
        };
    }
    
    public Converter<Integer, SourcetypeHistory> ApplicationConversionServiceFactoryBean.getIdToSourcetypeHistoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.SourcetypeHistory>() {
            public ro.roda.SourcetypeHistory convert(java.lang.Integer id) {
                return SourcetypeHistory.findSourcetypeHistory(id);
            }
        };
    }
    
    public Converter<String, SourcetypeHistory> ApplicationConversionServiceFactoryBean.getStringToSourcetypeHistoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SourcetypeHistory>() {
            public ro.roda.SourcetypeHistory convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), SourcetypeHistory.class);
            }
        };
    }
    
    public Converter<Study, String> ApplicationConversionServiceFactoryBean.getStudyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Study, java.lang.String>() {
            public String convert(Study study) {
                return new StringBuilder().append(study.getDatestart()).append(' ').append(study.getDateend()).append(' ').append(study.getInsertionStatus()).append(' ').append(study.getAdded()).toString();
            }
        };
    }
    
    public Converter<Integer, Study> ApplicationConversionServiceFactoryBean.getIdToStudyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Study>() {
            public ro.roda.Study convert(java.lang.Integer id) {
                return Study.findStudy(id);
            }
        };
    }
    
    public Converter<String, Study> ApplicationConversionServiceFactoryBean.getStringToStudyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Study>() {
            public ro.roda.Study convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Study.class);
            }
        };
    }
    
    public Converter<StudyAcl, String> ApplicationConversionServiceFactoryBean.getStudyAclToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyAcl, java.lang.String>() {
            public String convert(StudyAcl studyAcl) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<StudyAclPK, StudyAcl> ApplicationConversionServiceFactoryBean.getIdToStudyAclConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyAclPK, ro.roda.StudyAcl>() {
            public ro.roda.StudyAcl convert(ro.roda.StudyAclPK id) {
                return StudyAcl.findStudyAcl(id);
            }
        };
    }
    
    public Converter<String, StudyAcl> ApplicationConversionServiceFactoryBean.getStringToStudyAclConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyAcl>() {
            public ro.roda.StudyAcl convert(String id) {
                return getObject().convert(getObject().convert(id, StudyAclPK.class), StudyAcl.class);
            }
        };
    }
    
    public Converter<StudyDescr, String> ApplicationConversionServiceFactoryBean.getStudyDescrToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyDescr, java.lang.String>() {
            public String convert(StudyDescr studyDescr) {
                return new StringBuilder().append(studyDescr.getAbstract1()).append(' ').append(studyDescr.getGrantDetails()).append(' ').append(studyDescr.getTitle()).toString();
            }
        };
    }
    
    public Converter<StudyDescrPK, StudyDescr> ApplicationConversionServiceFactoryBean.getIdToStudyDescrConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyDescrPK, ro.roda.StudyDescr>() {
            public ro.roda.StudyDescr convert(ro.roda.StudyDescrPK id) {
                return StudyDescr.findStudyDescr(id);
            }
        };
    }
    
    public Converter<String, StudyDescr> ApplicationConversionServiceFactoryBean.getStringToStudyDescrConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyDescr>() {
            public ro.roda.StudyDescr convert(String id) {
                return getObject().convert(getObject().convert(id, StudyDescrPK.class), StudyDescr.class);
            }
        };
    }
    
    public Converter<StudyDocuments, String> ApplicationConversionServiceFactoryBean.getStudyDocumentsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyDocuments, java.lang.String>() {
            public String convert(StudyDocuments studyDocuments) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<StudyDocumentsPK, StudyDocuments> ApplicationConversionServiceFactoryBean.getIdToStudyDocumentsConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyDocumentsPK, ro.roda.StudyDocuments>() {
            public ro.roda.StudyDocuments convert(ro.roda.StudyDocumentsPK id) {
                return StudyDocuments.findStudyDocuments(id);
            }
        };
    }
    
    public Converter<String, StudyDocuments> ApplicationConversionServiceFactoryBean.getStringToStudyDocumentsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyDocuments>() {
            public ro.roda.StudyDocuments convert(String id) {
                return getObject().convert(getObject().convert(id, StudyDocumentsPK.class), StudyDocuments.class);
            }
        };
    }
    
    public Converter<StudyKeyword, String> ApplicationConversionServiceFactoryBean.getStudyKeywordToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyKeyword, java.lang.String>() {
            public String convert(StudyKeyword studyKeyword) {
                return new StringBuilder().append(studyKeyword.getAdded()).toString();
            }
        };
    }
    
    public Converter<StudyKeywordPK, StudyKeyword> ApplicationConversionServiceFactoryBean.getIdToStudyKeywordConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyKeywordPK, ro.roda.StudyKeyword>() {
            public ro.roda.StudyKeyword convert(ro.roda.StudyKeywordPK id) {
                return StudyKeyword.findStudyKeyword(id);
            }
        };
    }
    
    public Converter<String, StudyKeyword> ApplicationConversionServiceFactoryBean.getStringToStudyKeywordConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyKeyword>() {
            public ro.roda.StudyKeyword convert(String id) {
                return getObject().convert(getObject().convert(id, StudyKeywordPK.class), StudyKeyword.class);
            }
        };
    }
    
    public Converter<StudyOrg, String> ApplicationConversionServiceFactoryBean.getStudyOrgToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyOrg, java.lang.String>() {
            public String convert(StudyOrg studyOrg) {
                return new StringBuilder().append(studyOrg.getCitation()).append(' ').append(studyOrg.getAssocDetails()).toString();
            }
        };
    }
    
    public Converter<StudyOrgPK, StudyOrg> ApplicationConversionServiceFactoryBean.getIdToStudyOrgConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyOrgPK, ro.roda.StudyOrg>() {
            public ro.roda.StudyOrg convert(ro.roda.StudyOrgPK id) {
                return StudyOrg.findStudyOrg(id);
            }
        };
    }
    
    public Converter<String, StudyOrg> ApplicationConversionServiceFactoryBean.getStringToStudyOrgConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyOrg>() {
            public ro.roda.StudyOrg convert(String id) {
                return getObject().convert(getObject().convert(id, StudyOrgPK.class), StudyOrg.class);
            }
        };
    }
    
    public Converter<StudyOrgAssoc, String> ApplicationConversionServiceFactoryBean.getStudyOrgAssocToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyOrgAssoc, java.lang.String>() {
            public String convert(StudyOrgAssoc studyOrgAssoc) {
                return new StringBuilder().append(studyOrgAssoc.getAssocName()).append(' ').append(studyOrgAssoc.getAssocDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, StudyOrgAssoc> ApplicationConversionServiceFactoryBean.getIdToStudyOrgAssocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.StudyOrgAssoc>() {
            public ro.roda.StudyOrgAssoc convert(java.lang.Integer id) {
                return StudyOrgAssoc.findStudyOrgAssoc(id);
            }
        };
    }
    
    public Converter<String, StudyOrgAssoc> ApplicationConversionServiceFactoryBean.getStringToStudyOrgAssocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyOrgAssoc>() {
            public ro.roda.StudyOrgAssoc convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), StudyOrgAssoc.class);
            }
        };
    }
    
    public Converter<StudyPerson, String> ApplicationConversionServiceFactoryBean.getStudyPersonToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyPerson, java.lang.String>() {
            public String convert(StudyPerson studyPerson) {
                return new StringBuilder().append(studyPerson.getAssocDetails()).toString();
            }
        };
    }
    
    public Converter<StudyPersonPK, StudyPerson> ApplicationConversionServiceFactoryBean.getIdToStudyPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyPersonPK, ro.roda.StudyPerson>() {
            public ro.roda.StudyPerson convert(ro.roda.StudyPersonPK id) {
                return StudyPerson.findStudyPerson(id);
            }
        };
    }
    
    public Converter<String, StudyPerson> ApplicationConversionServiceFactoryBean.getStringToStudyPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyPerson>() {
            public ro.roda.StudyPerson convert(String id) {
                return getObject().convert(getObject().convert(id, StudyPersonPK.class), StudyPerson.class);
            }
        };
    }
    
    public Converter<StudyPersonAsoc, String> ApplicationConversionServiceFactoryBean.getStudyPersonAsocToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyPersonAsoc, java.lang.String>() {
            public String convert(StudyPersonAsoc studyPersonAsoc) {
                return new StringBuilder().append(studyPersonAsoc.getAsocName()).append(' ').append(studyPersonAsoc.getAsocDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, StudyPersonAsoc> ApplicationConversionServiceFactoryBean.getIdToStudyPersonAsocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.StudyPersonAsoc>() {
            public ro.roda.StudyPersonAsoc convert(java.lang.Integer id) {
                return StudyPersonAsoc.findStudyPersonAsoc(id);
            }
        };
    }
    
    public Converter<String, StudyPersonAsoc> ApplicationConversionServiceFactoryBean.getStringToStudyPersonAsocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyPersonAsoc>() {
            public ro.roda.StudyPersonAsoc convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), StudyPersonAsoc.class);
            }
        };
    }
    
    public Converter<StudyPersonAssoc, String> ApplicationConversionServiceFactoryBean.getStudyPersonAssocToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyPersonAssoc, java.lang.String>() {
            public String convert(StudyPersonAssoc studyPersonAssoc) {
                return new StringBuilder().append(studyPersonAssoc.getAsocName()).append(' ').append(studyPersonAssoc.getAsocDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, StudyPersonAssoc> ApplicationConversionServiceFactoryBean.getIdToStudyPersonAssocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.StudyPersonAssoc>() {
            public ro.roda.StudyPersonAssoc convert(java.lang.Integer id) {
                return StudyPersonAssoc.findStudyPersonAssoc(id);
            }
        };
    }
    
    public Converter<String, StudyPersonAssoc> ApplicationConversionServiceFactoryBean.getStringToStudyPersonAssocConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyPersonAssoc>() {
            public ro.roda.StudyPersonAssoc convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), StudyPersonAssoc.class);
            }
        };
    }
    
    public Converter<Suffix, String> ApplicationConversionServiceFactoryBean.getSuffixToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Suffix, java.lang.String>() {
            public String convert(Suffix suffix) {
                return new StringBuilder().append(suffix.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, Suffix> ApplicationConversionServiceFactoryBean.getIdToSuffixConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Suffix>() {
            public ro.roda.Suffix convert(java.lang.Integer id) {
                return Suffix.findSuffix(id);
            }
        };
    }
    
    public Converter<String, Suffix> ApplicationConversionServiceFactoryBean.getStringToSuffixConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Suffix>() {
            public ro.roda.Suffix convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Suffix.class);
            }
        };
    }
    
    public Converter<TimeMethType, String> ApplicationConversionServiceFactoryBean.getTimeMethTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.TimeMethType, java.lang.String>() {
            public String convert(TimeMethType timeMethType) {
                return new StringBuilder().append(timeMethType.getName()).append(' ').append(timeMethType.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, TimeMethType> ApplicationConversionServiceFactoryBean.getIdToTimeMethTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.TimeMethType>() {
            public ro.roda.TimeMethType convert(java.lang.Integer id) {
                return TimeMethType.findTimeMethType(id);
            }
        };
    }
    
    public Converter<String, TimeMethType> ApplicationConversionServiceFactoryBean.getStringToTimeMethTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.TimeMethType>() {
            public ro.roda.TimeMethType convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), TimeMethType.class);
            }
        };
    }
    
    public Converter<TitleType, String> ApplicationConversionServiceFactoryBean.getTitleTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.TitleType, java.lang.String>() {
            public String convert(TitleType titleType) {
                return new StringBuilder().append(titleType.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, TitleType> ApplicationConversionServiceFactoryBean.getIdToTitleTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.TitleType>() {
            public ro.roda.TitleType convert(java.lang.Integer id) {
                return TitleType.findTitleType(id);
            }
        };
    }
    
    public Converter<String, TitleType> ApplicationConversionServiceFactoryBean.getStringToTitleTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.TitleType>() {
            public ro.roda.TitleType convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), TitleType.class);
            }
        };
    }
    
    public Converter<Topic, String> ApplicationConversionServiceFactoryBean.getTopicToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Topic, java.lang.String>() {
            public String convert(Topic topic) {
                return new StringBuilder().append(topic.getName()).append(' ').append(topic.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, Topic> ApplicationConversionServiceFactoryBean.getIdToTopicConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.Topic>() {
            public ro.roda.Topic convert(java.lang.Integer id) {
                return Topic.findTopic(id);
            }
        };
    }
    
    public Converter<String, Topic> ApplicationConversionServiceFactoryBean.getStringToTopicConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Topic>() {
            public ro.roda.Topic convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Topic.class);
            }
        };
    }
    
    public Converter<TranslatedTopic, String> ApplicationConversionServiceFactoryBean.getTranslatedTopicToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.TranslatedTopic, java.lang.String>() {
            public String convert(TranslatedTopic translatedTopic) {
                return new StringBuilder().append(translatedTopic.getTranslation()).toString();
            }
        };
    }
    
    public Converter<TranslatedTopicPK, TranslatedTopic> ApplicationConversionServiceFactoryBean.getIdToTranslatedTopicConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.TranslatedTopicPK, ro.roda.TranslatedTopic>() {
            public ro.roda.TranslatedTopic convert(ro.roda.TranslatedTopicPK id) {
                return TranslatedTopic.findTranslatedTopic(id);
            }
        };
    }
    
    public Converter<String, TranslatedTopic> ApplicationConversionServiceFactoryBean.getStringToTranslatedTopicConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.TranslatedTopic>() {
            public ro.roda.TranslatedTopic convert(String id) {
                return getObject().convert(getObject().convert(id, TranslatedTopicPK.class), TranslatedTopic.class);
            }
        };
    }
    
    public Converter<UnitAnalysis, String> ApplicationConversionServiceFactoryBean.getUnitAnalysisToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UnitAnalysis, java.lang.String>() {
            public String convert(UnitAnalysis unitAnalysis) {
                return new StringBuilder().append(unitAnalysis.getName()).append(' ').append(unitAnalysis.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, UnitAnalysis> ApplicationConversionServiceFactoryBean.getIdToUnitAnalysisConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.UnitAnalysis>() {
            public ro.roda.UnitAnalysis convert(java.lang.Integer id) {
                return UnitAnalysis.findUnitAnalysis(id);
            }
        };
    }
    
    public Converter<String, UnitAnalysis> ApplicationConversionServiceFactoryBean.getStringToUnitAnalysisConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.UnitAnalysis>() {
            public ro.roda.UnitAnalysis convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), UnitAnalysis.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getCredentialProvider()).toString();
            }
        };
    }
    
    public Converter<Integer, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.User>() {
            public ro.roda.User convert(java.lang.Integer id) {
                return User.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.User>() {
            public ro.roda.User convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), User.class);
            }
        };
    }
    
    public Converter<UserAuthLog, String> ApplicationConversionServiceFactoryBean.getUserAuthLogToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UserAuthLog, java.lang.String>() {
            public String convert(UserAuthLog userAuthLog) {
                return new StringBuilder().append(userAuthLog.getAction()).append(' ').append(userAuthLog.getCredentialProvider()).append(' ').append(userAuthLog.getCredentialIdentifier()).append(' ').append(userAuthLog.getErrorMessage()).toString();
            }
        };
    }
    
    public Converter<UserAuthLogPK, UserAuthLog> ApplicationConversionServiceFactoryBean.getIdToUserAuthLogConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UserAuthLogPK, ro.roda.UserAuthLog>() {
            public ro.roda.UserAuthLog convert(ro.roda.UserAuthLogPK id) {
                return UserAuthLog.findUserAuthLog(id);
            }
        };
    }
    
    public Converter<String, UserAuthLog> ApplicationConversionServiceFactoryBean.getStringToUserAuthLogConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.UserAuthLog>() {
            public ro.roda.UserAuthLog convert(String id) {
                return getObject().convert(getObject().convert(id, UserAuthLogPK.class), UserAuthLog.class);
            }
        };
    }
    
    public Converter<UserMessage, String> ApplicationConversionServiceFactoryBean.getUserMessageToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UserMessage, java.lang.String>() {
            public String convert(UserMessage userMessage) {
                return new StringBuilder().append(userMessage.getMessage()).toString();
            }
        };
    }
    
    public Converter<Integer, UserMessage> ApplicationConversionServiceFactoryBean.getIdToUserMessageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.UserMessage>() {
            public ro.roda.UserMessage convert(java.lang.Integer id) {
                return UserMessage.findUserMessage(id);
            }
        };
    }
    
    public Converter<String, UserMessage> ApplicationConversionServiceFactoryBean.getStringToUserMessageConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.UserMessage>() {
            public ro.roda.UserMessage convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), UserMessage.class);
            }
        };
    }
    
    public Converter<UserProfile, String> ApplicationConversionServiceFactoryBean.getUserProfileToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UserProfile, java.lang.String>() {
            public String convert(UserProfile userProfile) {
                return new StringBuilder().append(userProfile.getFName()).append(' ').append(userProfile.getLName()).append(' ').append(userProfile.getEmail()).toString();
            }
        };
    }
    
    public Converter<Integer, UserProfile> ApplicationConversionServiceFactoryBean.getIdToUserProfileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.UserProfile>() {
            public ro.roda.UserProfile convert(java.lang.Integer id) {
                return UserProfile.findUserProfile(id);
            }
        };
    }
    
    public Converter<String, UserProfile> ApplicationConversionServiceFactoryBean.getStringToUserProfileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.UserProfile>() {
            public ro.roda.UserProfile convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), UserProfile.class);
            }
        };
    }
    
    public Converter<UserSetting, String> ApplicationConversionServiceFactoryBean.getUserSettingToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UserSetting, java.lang.String>() {
            public String convert(UserSetting userSetting) {
                return new StringBuilder().append(userSetting.getName()).append(' ').append(userSetting.getDescription()).append(' ').append(userSetting.getPredefinedValues()).append(' ').append(userSetting.getDefaultValue()).toString();
            }
        };
    }
    
    public Converter<Integer, UserSetting> ApplicationConversionServiceFactoryBean.getIdToUserSettingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.UserSetting>() {
            public ro.roda.UserSetting convert(java.lang.Integer id) {
                return UserSetting.findUserSetting(id);
            }
        };
    }
    
    public Converter<String, UserSetting> ApplicationConversionServiceFactoryBean.getStringToUserSettingConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.UserSetting>() {
            public ro.roda.UserSetting convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), UserSetting.class);
            }
        };
    }
    
    public Converter<UserSettingGroup, String> ApplicationConversionServiceFactoryBean.getUserSettingGroupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UserSettingGroup, java.lang.String>() {
            public String convert(UserSettingGroup userSettingGroup) {
                return new StringBuilder().append(userSettingGroup.getName()).append(' ').append(userSettingGroup.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, UserSettingGroup> ApplicationConversionServiceFactoryBean.getIdToUserSettingGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, ro.roda.UserSettingGroup>() {
            public ro.roda.UserSettingGroup convert(java.lang.Integer id) {
                return UserSettingGroup.findUserSettingGroup(id);
            }
        };
    }
    
    public Converter<String, UserSettingGroup> ApplicationConversionServiceFactoryBean.getStringToUserSettingGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.UserSettingGroup>() {
            public ro.roda.UserSettingGroup convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), UserSettingGroup.class);
            }
        };
    }
    
    public Converter<UserSettingValue, String> ApplicationConversionServiceFactoryBean.getUserSettingValueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UserSettingValue, java.lang.String>() {
            public String convert(UserSettingValue userSettingValue) {
                return new StringBuilder().append(userSettingValue.getValue()).toString();
            }
        };
    }
    
    public Converter<UserSettingValuePK, UserSettingValue> ApplicationConversionServiceFactoryBean.getIdToUserSettingValueConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UserSettingValuePK, ro.roda.UserSettingValue>() {
            public ro.roda.UserSettingValue convert(ro.roda.UserSettingValuePK id) {
                return UserSettingValue.findUserSettingValue(id);
            }
        };
    }
    
    public Converter<String, UserSettingValue> ApplicationConversionServiceFactoryBean.getStringToUserSettingValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.UserSettingValue>() {
            public ro.roda.UserSettingValue convert(String id) {
                return getObject().convert(getObject().convert(id, UserSettingValuePK.class), UserSettingValue.class);
            }
        };
    }
    
    public Converter<Value, String> ApplicationConversionServiceFactoryBean.getValueToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Value, java.lang.String>() {
            public String convert(Value value) {
                return new StringBuilder().append(value.getValue()).toString();
            }
        };
    }
    
    public Converter<Long, Value> ApplicationConversionServiceFactoryBean.getIdToValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.Value>() {
            public ro.roda.Value convert(java.lang.Long id) {
                return Value.findValue(id);
            }
        };
    }
    
    public Converter<String, Value> ApplicationConversionServiceFactoryBean.getStringToValueConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Value>() {
            public ro.roda.Value convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Value.class);
            }
        };
    }
    
    public Converter<Vargroup, String> ApplicationConversionServiceFactoryBean.getVargroupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Vargroup, java.lang.String>() {
            public String convert(Vargroup vargroup) {
                return new StringBuilder().append(vargroup.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Vargroup> ApplicationConversionServiceFactoryBean.getIdToVargroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.Vargroup>() {
            public ro.roda.Vargroup convert(java.lang.Long id) {
                return Vargroup.findVargroup(id);
            }
        };
    }
    
    public Converter<String, Vargroup> ApplicationConversionServiceFactoryBean.getStringToVargroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Vargroup>() {
            public ro.roda.Vargroup convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Vargroup.class);
            }
        };
    }
    
    public Converter<Variable, String> ApplicationConversionServiceFactoryBean.getVariableToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.Variable, java.lang.String>() {
            public String convert(Variable variable) {
                return new StringBuilder().append(variable.getLabel()).append(' ').append(variable.getType()).append(' ').append(variable.getOrderInInstance()).append(' ').append(variable.getOperatorInstructions()).toString();
            }
        };
    }
    
    public Converter<Long, Variable> ApplicationConversionServiceFactoryBean.getIdToVariableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.roda.Variable>() {
            public ro.roda.Variable convert(java.lang.Long id) {
                return Variable.findVariable(id);
            }
        };
    }
    
    public Converter<String, Variable> ApplicationConversionServiceFactoryBean.getStringToVariableConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.Variable>() {
            public ro.roda.Variable convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Variable.class);
            }
        };
    }
    
    public Converter<String, InstancePersonPK> ApplicationConversionServiceFactoryBean.getJsonToInstancePersonPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstancePersonPK>() {
            public InstancePersonPK convert(String encodedJson) {
                return InstancePersonPK.fromJsonToInstancePersonPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<InstancePersonPK, String> ApplicationConversionServiceFactoryBean.getInstancePersonPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstancePersonPK, java.lang.String>() {
            public String convert(InstancePersonPK instancePersonPK) {
                return Base64.encodeBase64URLSafeString(instancePersonPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, PersonEmailPK> ApplicationConversionServiceFactoryBean.getJsonToPersonEmailPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonEmailPK>() {
            public PersonEmailPK convert(String encodedJson) {
                return PersonEmailPK.fromJsonToPersonEmailPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<PersonEmailPK, String> ApplicationConversionServiceFactoryBean.getPersonEmailPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonEmailPK, java.lang.String>() {
            public String convert(PersonEmailPK personEmailPK) {
                return Base64.encodeBase64URLSafeString(personEmailPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, UserAuthLogPK> ApplicationConversionServiceFactoryBean.getJsonToUserAuthLogPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.UserAuthLogPK>() {
            public UserAuthLogPK convert(String encodedJson) {
                return UserAuthLogPK.fromJsonToUserAuthLogPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<UserAuthLogPK, String> ApplicationConversionServiceFactoryBean.getUserAuthLogPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UserAuthLogPK, java.lang.String>() {
            public String convert(UserAuthLogPK userAuthLogPK) {
                return Base64.encodeBase64URLSafeString(userAuthLogPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, FormEditedNumberVarPK> ApplicationConversionServiceFactoryBean.getJsonToFormEditedNumberVarPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.FormEditedNumberVarPK>() {
            public FormEditedNumberVarPK convert(String encodedJson) {
                return FormEditedNumberVarPK.fromJsonToFormEditedNumberVarPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<FormEditedNumberVarPK, String> ApplicationConversionServiceFactoryBean.getFormEditedNumberVarPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FormEditedNumberVarPK, java.lang.String>() {
            public String convert(FormEditedNumberVarPK formEditedNumberVarPK) {
                return Base64.encodeBase64URLSafeString(formEditedNumberVarPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, InstanceAclPK> ApplicationConversionServiceFactoryBean.getJsonToInstanceAclPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstanceAclPK>() {
            public InstanceAclPK convert(String encodedJson) {
                return InstanceAclPK.fromJsonToInstanceAclPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<InstanceAclPK, String> ApplicationConversionServiceFactoryBean.getInstanceAclPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceAclPK, java.lang.String>() {
            public String convert(InstanceAclPK instanceAclPK) {
                return Base64.encodeBase64URLSafeString(instanceAclPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, FilePropertyNameValuePK> ApplicationConversionServiceFactoryBean.getJsonToFilePropertyNameValuePKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.FilePropertyNameValuePK>() {
            public FilePropertyNameValuePK convert(String encodedJson) {
                return FilePropertyNameValuePK.fromJsonToFilePropertyNameValuePK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<FilePropertyNameValuePK, String> ApplicationConversionServiceFactoryBean.getFilePropertyNameValuePKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FilePropertyNameValuePK, java.lang.String>() {
            public String convert(FilePropertyNameValuePK filePropertyNameValuePK) {
                return Base64.encodeBase64URLSafeString(filePropertyNameValuePK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, OrgAddressPK> ApplicationConversionServiceFactoryBean.getJsonToOrgAddressPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgAddressPK>() {
            public OrgAddressPK convert(String encodedJson) {
                return OrgAddressPK.fromJsonToOrgAddressPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<OrgAddressPK, String> ApplicationConversionServiceFactoryBean.getOrgAddressPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgAddressPK, java.lang.String>() {
            public String convert(OrgAddressPK orgAddressPK) {
                return Base64.encodeBase64URLSafeString(orgAddressPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, OrgPhonePK> ApplicationConversionServiceFactoryBean.getJsonToOrgPhonePKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgPhonePK>() {
            public OrgPhonePK convert(String encodedJson) {
                return OrgPhonePK.fromJsonToOrgPhonePK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<OrgPhonePK, String> ApplicationConversionServiceFactoryBean.getOrgPhonePKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgPhonePK, java.lang.String>() {
            public String convert(OrgPhonePK orgPhonePK) {
                return Base64.encodeBase64URLSafeString(orgPhonePK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, FormSelectionVarPK> ApplicationConversionServiceFactoryBean.getJsonToFormSelectionVarPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.FormSelectionVarPK>() {
            public FormSelectionVarPK convert(String encodedJson) {
                return FormSelectionVarPK.fromJsonToFormSelectionVarPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<FormSelectionVarPK, String> ApplicationConversionServiceFactoryBean.getFormSelectionVarPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FormSelectionVarPK, java.lang.String>() {
            public String convert(FormSelectionVarPK formSelectionVarPK) {
                return Base64.encodeBase64URLSafeString(formSelectionVarPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, InstanceOrgPK> ApplicationConversionServiceFactoryBean.getJsonToInstanceOrgPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstanceOrgPK>() {
            public InstanceOrgPK convert(String encodedJson) {
                return InstanceOrgPK.fromJsonToInstanceOrgPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<InstanceOrgPK, String> ApplicationConversionServiceFactoryBean.getInstanceOrgPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceOrgPK, java.lang.String>() {
            public String convert(InstanceOrgPK instanceOrgPK) {
                return Base64.encodeBase64URLSafeString(instanceOrgPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, OrgEmailPK> ApplicationConversionServiceFactoryBean.getJsonToOrgEmailPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgEmailPK>() {
            public OrgEmailPK convert(String encodedJson) {
                return OrgEmailPK.fromJsonToOrgEmailPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<OrgEmailPK, String> ApplicationConversionServiceFactoryBean.getOrgEmailPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgEmailPK, java.lang.String>() {
            public String convert(OrgEmailPK orgEmailPK) {
                return Base64.encodeBase64URLSafeString(orgEmailPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, CmsFilePropertyNameValuePK> ApplicationConversionServiceFactoryBean.getJsonToCmsFilePropertyNameValuePKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CmsFilePropertyNameValuePK>() {
            public CmsFilePropertyNameValuePK convert(String encodedJson) {
                return CmsFilePropertyNameValuePK.fromJsonToCmsFilePropertyNameValuePK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<CmsFilePropertyNameValuePK, String> ApplicationConversionServiceFactoryBean.getCmsFilePropertyNameValuePKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CmsFilePropertyNameValuePK, java.lang.String>() {
            public String convert(CmsFilePropertyNameValuePK cmsFilePropertyNameValuePK) {
                return Base64.encodeBase64URLSafeString(cmsFilePropertyNameValuePK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, CatalogAclPK> ApplicationConversionServiceFactoryBean.getJsonToCatalogAclPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CatalogAclPK>() {
            public CatalogAclPK convert(String encodedJson) {
                return CatalogAclPK.fromJsonToCatalogAclPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<CatalogAclPK, String> ApplicationConversionServiceFactoryBean.getCatalogAclPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CatalogAclPK, java.lang.String>() {
            public String convert(CatalogAclPK catalogAclPK) {
                return Base64.encodeBase64URLSafeString(catalogAclPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, PersonInternetPK> ApplicationConversionServiceFactoryBean.getJsonToPersonInternetPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonInternetPK>() {
            public PersonInternetPK convert(String encodedJson) {
                return PersonInternetPK.fromJsonToPersonInternetPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<PersonInternetPK, String> ApplicationConversionServiceFactoryBean.getPersonInternetPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonInternetPK, java.lang.String>() {
            public String convert(PersonInternetPK personInternetPK) {
                return Base64.encodeBase64URLSafeString(personInternetPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, OrgRelationsPK> ApplicationConversionServiceFactoryBean.getJsonToOrgRelationsPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgRelationsPK>() {
            public OrgRelationsPK convert(String encodedJson) {
                return OrgRelationsPK.fromJsonToOrgRelationsPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<OrgRelationsPK, String> ApplicationConversionServiceFactoryBean.getOrgRelationsPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgRelationsPK, java.lang.String>() {
            public String convert(OrgRelationsPK orgRelationsPK) {
                return Base64.encodeBase64URLSafeString(orgRelationsPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, StudyOrgPK> ApplicationConversionServiceFactoryBean.getJsonToStudyOrgPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyOrgPK>() {
            public StudyOrgPK convert(String encodedJson) {
                return StudyOrgPK.fromJsonToStudyOrgPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<StudyOrgPK, String> ApplicationConversionServiceFactoryBean.getStudyOrgPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyOrgPK, java.lang.String>() {
            public String convert(StudyOrgPK studyOrgPK) {
                return Base64.encodeBase64URLSafeString(studyOrgPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, StudyAclPK> ApplicationConversionServiceFactoryBean.getJsonToStudyAclPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyAclPK>() {
            public StudyAclPK convert(String encodedJson) {
                return StudyAclPK.fromJsonToStudyAclPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<StudyAclPK, String> ApplicationConversionServiceFactoryBean.getStudyAclPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyAclPK, java.lang.String>() {
            public String convert(StudyAclPK studyAclPK) {
                return Base64.encodeBase64URLSafeString(studyAclPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, PersonPhonePK> ApplicationConversionServiceFactoryBean.getJsonToPersonPhonePKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonPhonePK>() {
            public PersonPhonePK convert(String encodedJson) {
                return PersonPhonePK.fromJsonToPersonPhonePK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<PersonPhonePK, String> ApplicationConversionServiceFactoryBean.getPersonPhonePKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonPhonePK, java.lang.String>() {
            public String convert(PersonPhonePK personPhonePK) {
                return Base64.encodeBase64URLSafeString(personPhonePK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, OrgInternetPK> ApplicationConversionServiceFactoryBean.getJsonToOrgInternetPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.OrgInternetPK>() {
            public OrgInternetPK convert(String encodedJson) {
                return OrgInternetPK.fromJsonToOrgInternetPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<OrgInternetPK, String> ApplicationConversionServiceFactoryBean.getOrgInternetPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.OrgInternetPK, java.lang.String>() {
            public String convert(OrgInternetPK orgInternetPK) {
                return Base64.encodeBase64URLSafeString(orgInternetPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, SelectionVariableItemPK> ApplicationConversionServiceFactoryBean.getJsonToSelectionVariableItemPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.SelectionVariableItemPK>() {
            public SelectionVariableItemPK convert(String encodedJson) {
                return SelectionVariableItemPK.fromJsonToSelectionVariableItemPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<SelectionVariableItemPK, String> ApplicationConversionServiceFactoryBean.getSelectionVariableItemPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.SelectionVariableItemPK, java.lang.String>() {
            public String convert(SelectionVariableItemPK selectionVariableItemPK) {
                return Base64.encodeBase64URLSafeString(selectionVariableItemPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, FileAclPK> ApplicationConversionServiceFactoryBean.getJsonToFileAclPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.FileAclPK>() {
            public FileAclPK convert(String encodedJson) {
                return FileAclPK.fromJsonToFileAclPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<FileAclPK, String> ApplicationConversionServiceFactoryBean.getFileAclPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FileAclPK, java.lang.String>() {
            public String convert(FileAclPK fileAclPK) {
                return Base64.encodeBase64URLSafeString(fileAclPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, TranslatedTopicPK> ApplicationConversionServiceFactoryBean.getJsonToTranslatedTopicPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.TranslatedTopicPK>() {
            public TranslatedTopicPK convert(String encodedJson) {
                return TranslatedTopicPK.fromJsonToTranslatedTopicPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<TranslatedTopicPK, String> ApplicationConversionServiceFactoryBean.getTranslatedTopicPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.TranslatedTopicPK, java.lang.String>() {
            public String convert(TranslatedTopicPK translatedTopicPK) {
                return Base64.encodeBase64URLSafeString(translatedTopicPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, InstanceDescrPK> ApplicationConversionServiceFactoryBean.getJsonToInstanceDescrPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstanceDescrPK>() {
            public InstanceDescrPK convert(String encodedJson) {
                return InstanceDescrPK.fromJsonToInstanceDescrPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<InstanceDescrPK, String> ApplicationConversionServiceFactoryBean.getInstanceDescrPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceDescrPK, java.lang.String>() {
            public String convert(InstanceDescrPK instanceDescrPK) {
                return Base64.encodeBase64URLSafeString(instanceDescrPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, StudyKeywordPK> ApplicationConversionServiceFactoryBean.getJsonToStudyKeywordPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyKeywordPK>() {
            public StudyKeywordPK convert(String encodedJson) {
                return StudyKeywordPK.fromJsonToStudyKeywordPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<StudyKeywordPK, String> ApplicationConversionServiceFactoryBean.getStudyKeywordPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyKeywordPK, java.lang.String>() {
            public String convert(StudyKeywordPK studyKeywordPK) {
                return Base64.encodeBase64URLSafeString(studyKeywordPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, StudyDocumentsPK> ApplicationConversionServiceFactoryBean.getJsonToStudyDocumentsPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyDocumentsPK>() {
            public StudyDocumentsPK convert(String encodedJson) {
                return StudyDocumentsPK.fromJsonToStudyDocumentsPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<StudyDocumentsPK, String> ApplicationConversionServiceFactoryBean.getStudyDocumentsPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyDocumentsPK, java.lang.String>() {
            public String convert(StudyDocumentsPK studyDocumentsPK) {
                return Base64.encodeBase64URLSafeString(studyDocumentsPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, StudyDescrPK> ApplicationConversionServiceFactoryBean.getJsonToStudyDescrPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyDescrPK>() {
            public StudyDescrPK convert(String encodedJson) {
                return StudyDescrPK.fromJsonToStudyDescrPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<StudyDescrPK, String> ApplicationConversionServiceFactoryBean.getStudyDescrPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyDescrPK, java.lang.String>() {
            public String convert(StudyDescrPK studyDescrPK) {
                return Base64.encodeBase64URLSafeString(studyDescrPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, InstanceKeywordPK> ApplicationConversionServiceFactoryBean.getJsonToInstanceKeywordPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.InstanceKeywordPK>() {
            public InstanceKeywordPK convert(String encodedJson) {
                return InstanceKeywordPK.fromJsonToInstanceKeywordPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<InstanceKeywordPK, String> ApplicationConversionServiceFactoryBean.getInstanceKeywordPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.InstanceKeywordPK, java.lang.String>() {
            public String convert(InstanceKeywordPK instanceKeywordPK) {
                return Base64.encodeBase64URLSafeString(instanceKeywordPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, PersonAddressPK> ApplicationConversionServiceFactoryBean.getJsonToPersonAddressPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonAddressPK>() {
            public PersonAddressPK convert(String encodedJson) {
                return PersonAddressPK.fromJsonToPersonAddressPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<PersonAddressPK, String> ApplicationConversionServiceFactoryBean.getPersonAddressPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonAddressPK, java.lang.String>() {
            public String convert(PersonAddressPK personAddressPK) {
                return Base64.encodeBase64URLSafeString(personAddressPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, PersonOrgPK> ApplicationConversionServiceFactoryBean.getJsonToPersonOrgPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.PersonOrgPK>() {
            public PersonOrgPK convert(String encodedJson) {
                return PersonOrgPK.fromJsonToPersonOrgPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<PersonOrgPK, String> ApplicationConversionServiceFactoryBean.getPersonOrgPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.PersonOrgPK, java.lang.String>() {
            public String convert(PersonOrgPK personOrgPK) {
                return Base64.encodeBase64URLSafeString(personOrgPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, UserSettingValuePK> ApplicationConversionServiceFactoryBean.getJsonToUserSettingValuePKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.UserSettingValuePK>() {
            public UserSettingValuePK convert(String encodedJson) {
                return UserSettingValuePK.fromJsonToUserSettingValuePK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<UserSettingValuePK, String> ApplicationConversionServiceFactoryBean.getUserSettingValuePKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.UserSettingValuePK, java.lang.String>() {
            public String convert(UserSettingValuePK userSettingValuePK) {
                return Base64.encodeBase64URLSafeString(userSettingValuePK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, FormEditedTextVarPK> ApplicationConversionServiceFactoryBean.getJsonToFormEditedTextVarPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.FormEditedTextVarPK>() {
            public FormEditedTextVarPK convert(String encodedJson) {
                return FormEditedTextVarPK.fromJsonToFormEditedTextVarPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<FormEditedTextVarPK, String> ApplicationConversionServiceFactoryBean.getFormEditedTextVarPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.FormEditedTextVarPK, java.lang.String>() {
            public String convert(FormEditedTextVarPK formEditedTextVarPK) {
                return Base64.encodeBase64URLSafeString(formEditedTextVarPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, StudyPersonPK> ApplicationConversionServiceFactoryBean.getJsonToStudyPersonPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.StudyPersonPK>() {
            public StudyPersonPK convert(String encodedJson) {
                return StudyPersonPK.fromJsonToStudyPersonPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<StudyPersonPK, String> ApplicationConversionServiceFactoryBean.getStudyPersonPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.StudyPersonPK, java.lang.String>() {
            public String convert(StudyPersonPK studyPersonPK) {
                return Base64.encodeBase64URLSafeString(studyPersonPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, AuditFieldPK> ApplicationConversionServiceFactoryBean.getJsonToAuditFieldPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.AuditFieldPK>() {
            public AuditFieldPK convert(String encodedJson) {
                return AuditFieldPK.fromJsonToAuditFieldPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<AuditFieldPK, String> ApplicationConversionServiceFactoryBean.getAuditFieldPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AuditFieldPK, java.lang.String>() {
            public String convert(AuditFieldPK auditFieldPK) {
                return Base64.encodeBase64URLSafeString(auditFieldPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, AuditRowIdPK> ApplicationConversionServiceFactoryBean.getJsonToAuditRowIdPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.AuditRowIdPK>() {
            public AuditRowIdPK convert(String encodedJson) {
                return AuditRowIdPK.fromJsonToAuditRowIdPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<AuditRowIdPK, String> ApplicationConversionServiceFactoryBean.getAuditRowIdPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.AuditRowIdPK, java.lang.String>() {
            public String convert(AuditRowIdPK auditRowIdPK) {
                return Base64.encodeBase64URLSafeString(auditRowIdPK.toJson().getBytes());
            }
        };
    }
    
    public Converter<String, CatalogStudyPK> ApplicationConversionServiceFactoryBean.getJsonToCatalogStudyPKConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.roda.CatalogStudyPK>() {
            public CatalogStudyPK convert(String encodedJson) {
                return CatalogStudyPK.fromJsonToCatalogStudyPK(new String(Base64.decodeBase64(encodedJson)));
            }
        };
    }
    
    public Converter<CatalogStudyPK, String> ApplicationConversionServiceFactoryBean.getCatalogStudyPKToJsonConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.roda.CatalogStudyPK, java.lang.String>() {
            public String convert(CatalogStudyPK catalogStudyPK) {
                return Base64.encodeBase64URLSafeString(catalogStudyPK.toJson().getBytes());
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAclClassToStringConverter());
        registry.addConverter(getIdToAclClassConverter());
        registry.addConverter(getStringToAclClassConverter());
        registry.addConverter(getAclEntryToStringConverter());
        registry.addConverter(getIdToAclEntryConverter());
        registry.addConverter(getStringToAclEntryConverter());
        registry.addConverter(getAclObjectIdentityToStringConverter());
        registry.addConverter(getIdToAclObjectIdentityConverter());
        registry.addConverter(getStringToAclObjectIdentityConverter());
        registry.addConverter(getAclSidToStringConverter());
        registry.addConverter(getIdToAclSidConverter());
        registry.addConverter(getStringToAclSidConverter());
        registry.addConverter(getAddressToStringConverter());
        registry.addConverter(getIdToAddressConverter());
        registry.addConverter(getStringToAddressConverter());
        registry.addConverter(getAuditToStringConverter());
        registry.addConverter(getIdToAuditConverter());
        registry.addConverter(getStringToAuditConverter());
        registry.addConverter(getAuditFieldToStringConverter());
        registry.addConverter(getIdToAuditFieldConverter());
        registry.addConverter(getStringToAuditFieldConverter());
        registry.addConverter(getAuditRowIdToStringConverter());
        registry.addConverter(getIdToAuditRowIdConverter());
        registry.addConverter(getStringToAuditRowIdConverter());
        registry.addConverter(getAuthDataToStringConverter());
        registry.addConverter(getIdToAuthDataConverter());
        registry.addConverter(getStringToAuthDataConverter());
        registry.addConverter(getCatalogToStringConverter());
        registry.addConverter(getIdToCatalogConverter());
        registry.addConverter(getStringToCatalogConverter());
        registry.addConverter(getCatalogAclToStringConverter());
        registry.addConverter(getIdToCatalogAclConverter());
        registry.addConverter(getStringToCatalogAclConverter());
        registry.addConverter(getCatalogStudyToStringConverter());
        registry.addConverter(getIdToCatalogStudyConverter());
        registry.addConverter(getStringToCatalogStudyConverter());
        registry.addConverter(getCityToStringConverter());
        registry.addConverter(getIdToCityConverter());
        registry.addConverter(getStringToCityConverter());
        registry.addConverter(getCmsFileToStringConverter());
        registry.addConverter(getIdToCmsFileConverter());
        registry.addConverter(getStringToCmsFileConverter());
        registry.addConverter(getCmsFilePropertyNameValueToStringConverter());
        registry.addConverter(getIdToCmsFilePropertyNameValueConverter());
        registry.addConverter(getStringToCmsFilePropertyNameValueConverter());
        registry.addConverter(getCmsFolderToStringConverter());
        registry.addConverter(getIdToCmsFolderConverter());
        registry.addConverter(getStringToCmsFolderConverter());
        registry.addConverter(getCmsLayoutToStringConverter());
        registry.addConverter(getIdToCmsLayoutConverter());
        registry.addConverter(getStringToCmsLayoutConverter());
        registry.addConverter(getCmsLayoutGroupToStringConverter());
        registry.addConverter(getIdToCmsLayoutGroupConverter());
        registry.addConverter(getStringToCmsLayoutGroupConverter());
        registry.addConverter(getCmsPageToStringConverter());
        registry.addConverter(getIdToCmsPageConverter());
        registry.addConverter(getStringToCmsPageConverter());
        registry.addConverter(getCmsPageContentToStringConverter());
        registry.addConverter(getIdToCmsPageContentConverter());
        registry.addConverter(getStringToCmsPageContentConverter());
        registry.addConverter(getCmsPageTypeToStringConverter());
        registry.addConverter(getIdToCmsPageTypeConverter());
        registry.addConverter(getStringToCmsPageTypeConverter());
        registry.addConverter(getCmsSnippetToStringConverter());
        registry.addConverter(getIdToCmsSnippetConverter());
        registry.addConverter(getStringToCmsSnippetConverter());
        registry.addConverter(getCmsSnippetGroupToStringConverter());
        registry.addConverter(getIdToCmsSnippetGroupConverter());
        registry.addConverter(getStringToCmsSnippetGroupConverter());
        registry.addConverter(getCollectionModelTypeToStringConverter());
        registry.addConverter(getIdToCollectionModelTypeConverter());
        registry.addConverter(getStringToCollectionModelTypeConverter());
        registry.addConverter(getConceptToStringConverter());
        registry.addConverter(getIdToConceptConverter());
        registry.addConverter(getStringToConceptConverter());
        registry.addConverter(getCountryToStringConverter());
        registry.addConverter(getIdToCountryConverter());
        registry.addConverter(getEmailToStringConverter());
        registry.addConverter(getIdToEmailConverter());
        registry.addConverter(getStringToEmailConverter());
        registry.addConverter(getFileToStringConverter());
        registry.addConverter(getIdToFileConverter());
        registry.addConverter(getStringToFileConverter());
        registry.addConverter(getFileAclToStringConverter());
        registry.addConverter(getIdToFileAclConverter());
        registry.addConverter(getStringToFileAclConverter());
        registry.addConverter(getFilePropertyNameValueToStringConverter());
        registry.addConverter(getIdToFilePropertyNameValueConverter());
        registry.addConverter(getStringToFilePropertyNameValueConverter());
        registry.addConverter(getFormToStringConverter());
        registry.addConverter(getIdToFormConverter());
        registry.addConverter(getStringToFormConverter());
        registry.addConverter(getFormEditedNumberVarToStringConverter());
        registry.addConverter(getIdToFormEditedNumberVarConverter());
        registry.addConverter(getStringToFormEditedNumberVarConverter());
        registry.addConverter(getFormEditedTextVarToStringConverter());
        registry.addConverter(getIdToFormEditedTextVarConverter());
        registry.addConverter(getStringToFormEditedTextVarConverter());
        registry.addConverter(getFormSelectionVarToStringConverter());
        registry.addConverter(getIdToFormSelectionVarConverter());
        registry.addConverter(getStringToFormSelectionVarConverter());
        registry.addConverter(getInstanceToStringConverter());
        registry.addConverter(getIdToInstanceConverter());
        registry.addConverter(getStringToInstanceConverter());
        registry.addConverter(getInstanceAclToStringConverter());
        registry.addConverter(getIdToInstanceAclConverter());
        registry.addConverter(getStringToInstanceAclConverter());
        registry.addConverter(getInstanceDescrToStringConverter());
        registry.addConverter(getIdToInstanceDescrConverter());
        registry.addConverter(getStringToInstanceDescrConverter());
        registry.addConverter(getInstanceKeywordToStringConverter());
        registry.addConverter(getIdToInstanceKeywordConverter());
        registry.addConverter(getStringToInstanceKeywordConverter());
        registry.addConverter(getInstanceOrgToStringConverter());
        registry.addConverter(getIdToInstanceOrgConverter());
        registry.addConverter(getStringToInstanceOrgConverter());
        registry.addConverter(getInstanceOrgAssocToStringConverter());
        registry.addConverter(getIdToInstanceOrgAssocConverter());
        registry.addConverter(getStringToInstanceOrgAssocConverter());
        registry.addConverter(getInstancePersonToStringConverter());
        registry.addConverter(getIdToInstancePersonConverter());
        registry.addConverter(getStringToInstancePersonConverter());
        registry.addConverter(getInstancePersonAssocToStringConverter());
        registry.addConverter(getIdToInstancePersonAssocConverter());
        registry.addConverter(getStringToInstancePersonAssocConverter());
        registry.addConverter(getInternetToStringConverter());
        registry.addConverter(getIdToInternetConverter());
        registry.addConverter(getStringToInternetConverter());
        registry.addConverter(getItemToStringConverter());
        registry.addConverter(getIdToItemConverter());
        registry.addConverter(getStringToItemConverter());
        registry.addConverter(getKeywordToStringConverter());
        registry.addConverter(getIdToKeywordConverter());
        registry.addConverter(getStringToKeywordConverter());
        registry.addConverter(getLangToStringConverter());
        registry.addConverter(getIdToLangConverter());
        registry.addConverter(getNewsToStringConverter());
        registry.addConverter(getIdToNewsConverter());
        registry.addConverter(getStringToNewsConverter());
        registry.addConverter(getOrgToStringConverter());
        registry.addConverter(getIdToOrgConverter());
        registry.addConverter(getStringToOrgConverter());
        registry.addConverter(getOrgAddressToStringConverter());
        registry.addConverter(getIdToOrgAddressConverter());
        registry.addConverter(getStringToOrgAddressConverter());
        registry.addConverter(getOrgEmailToStringConverter());
        registry.addConverter(getIdToOrgEmailConverter());
        registry.addConverter(getStringToOrgEmailConverter());
        registry.addConverter(getOrgInternetToStringConverter());
        registry.addConverter(getIdToOrgInternetConverter());
        registry.addConverter(getStringToOrgInternetConverter());
        registry.addConverter(getOrgPhoneToStringConverter());
        registry.addConverter(getIdToOrgPhoneConverter());
        registry.addConverter(getStringToOrgPhoneConverter());
        registry.addConverter(getOrgPrefixToStringConverter());
        registry.addConverter(getIdToOrgPrefixConverter());
        registry.addConverter(getStringToOrgPrefixConverter());
        registry.addConverter(getOrgRelationTypeToStringConverter());
        registry.addConverter(getIdToOrgRelationTypeConverter());
        registry.addConverter(getStringToOrgRelationTypeConverter());
        registry.addConverter(getOrgRelationsToStringConverter());
        registry.addConverter(getIdToOrgRelationsConverter());
        registry.addConverter(getStringToOrgRelationsConverter());
        registry.addConverter(getOrgSufixToStringConverter());
        registry.addConverter(getIdToOrgSufixConverter());
        registry.addConverter(getStringToOrgSufixConverter());
        registry.addConverter(getOtherStatisticToStringConverter());
        registry.addConverter(getIdToOtherStatisticConverter());
        registry.addConverter(getStringToOtherStatisticConverter());
        registry.addConverter(getPersonToStringConverter());
        registry.addConverter(getIdToPersonConverter());
        registry.addConverter(getStringToPersonConverter());
        registry.addConverter(getPersonAddressToStringConverter());
        registry.addConverter(getIdToPersonAddressConverter());
        registry.addConverter(getStringToPersonAddressConverter());
        registry.addConverter(getPersonEmailToStringConverter());
        registry.addConverter(getIdToPersonEmailConverter());
        registry.addConverter(getStringToPersonEmailConverter());
        registry.addConverter(getPersonInternetToStringConverter());
        registry.addConverter(getIdToPersonInternetConverter());
        registry.addConverter(getStringToPersonInternetConverter());
        registry.addConverter(getPersonLinksToStringConverter());
        registry.addConverter(getIdToPersonLinksConverter());
        registry.addConverter(getStringToPersonLinksConverter());
        registry.addConverter(getPersonOrgToStringConverter());
        registry.addConverter(getIdToPersonOrgConverter());
        registry.addConverter(getStringToPersonOrgConverter());
        registry.addConverter(getPersonPhoneToStringConverter());
        registry.addConverter(getIdToPersonPhoneConverter());
        registry.addConverter(getStringToPersonPhoneConverter());
        registry.addConverter(getPersonRoleToStringConverter());
        registry.addConverter(getIdToPersonRoleConverter());
        registry.addConverter(getStringToPersonRoleConverter());
        registry.addConverter(getPhoneToStringConverter());
        registry.addConverter(getIdToPhoneConverter());
        registry.addConverter(getStringToPhoneConverter());
        registry.addConverter(getPrefixToStringConverter());
        registry.addConverter(getIdToPrefixConverter());
        registry.addConverter(getStringToPrefixConverter());
        registry.addConverter(getPropertyNameToStringConverter());
        registry.addConverter(getIdToPropertyNameConverter());
        registry.addConverter(getStringToPropertyNameConverter());
        registry.addConverter(getPropertyValueToStringConverter());
        registry.addConverter(getIdToPropertyValueConverter());
        registry.addConverter(getStringToPropertyValueConverter());
        registry.addConverter(getRegionToStringConverter());
        registry.addConverter(getIdToRegionConverter());
        registry.addConverter(getStringToRegionConverter());
        registry.addConverter(getRegiontypeToStringConverter());
        registry.addConverter(getIdToRegiontypeConverter());
        registry.addConverter(getStringToRegiontypeConverter());
        registry.addConverter(getRoleToStringConverter());
        registry.addConverter(getIdToRoleConverter());
        registry.addConverter(getStringToRoleConverter());
        registry.addConverter(getSamplingProcedureToStringConverter());
        registry.addConverter(getIdToSamplingProcedureConverter());
        registry.addConverter(getStringToSamplingProcedureConverter());
        registry.addConverter(getScaleToStringConverter());
        registry.addConverter(getIdToScaleConverter());
        registry.addConverter(getStringToScaleConverter());
        registry.addConverter(getSelectionVariableToStringConverter());
        registry.addConverter(getIdToSelectionVariableConverter());
        registry.addConverter(getStringToSelectionVariableConverter());
        registry.addConverter(getSelectionVariableItemToStringConverter());
        registry.addConverter(getIdToSelectionVariableItemConverter());
        registry.addConverter(getStringToSelectionVariableItemConverter());
        registry.addConverter(getSettingToStringConverter());
        registry.addConverter(getIdToSettingConverter());
        registry.addConverter(getStringToSettingConverter());
        registry.addConverter(getSettingGroupToStringConverter());
        registry.addConverter(getIdToSettingGroupConverter());
        registry.addConverter(getStringToSettingGroupConverter());
        registry.addConverter(getSettingValueToStringConverter());
        registry.addConverter(getIdToSettingValueConverter());
        registry.addConverter(getStringToSettingValueConverter());
        registry.addConverter(getSkipToStringConverter());
        registry.addConverter(getIdToSkipConverter());
        registry.addConverter(getStringToSkipConverter());
        registry.addConverter(getSourceToStringConverter());
        registry.addConverter(getIdToSourceConverter());
        registry.addConverter(getStringToSourceConverter());
        registry.addConverter(getSourceContactMethodToStringConverter());
        registry.addConverter(getIdToSourceContactMethodConverter());
        registry.addConverter(getStringToSourceContactMethodConverter());
        registry.addConverter(getSourceContactsToStringConverter());
        registry.addConverter(getIdToSourceContactsConverter());
        registry.addConverter(getStringToSourceContactsConverter());
        registry.addConverter(getSourcestudyToStringConverter());
        registry.addConverter(getIdToSourcestudyConverter());
        registry.addConverter(getStringToSourcestudyConverter());
        registry.addConverter(getSourcestudyTypeToStringConverter());
        registry.addConverter(getIdToSourcestudyTypeConverter());
        registry.addConverter(getStringToSourcestudyTypeConverter());
        registry.addConverter(getSourcestudyTypeHistoryToStringConverter());
        registry.addConverter(getIdToSourcestudyTypeHistoryConverter());
        registry.addConverter(getStringToSourcestudyTypeHistoryConverter());
        registry.addConverter(getSourcetypeToStringConverter());
        registry.addConverter(getIdToSourcetypeConverter());
        registry.addConverter(getStringToSourcetypeConverter());
        registry.addConverter(getSourcetypeHistoryToStringConverter());
        registry.addConverter(getIdToSourcetypeHistoryConverter());
        registry.addConverter(getStringToSourcetypeHistoryConverter());
        registry.addConverter(getStudyToStringConverter());
        registry.addConverter(getIdToStudyConverter());
        registry.addConverter(getStringToStudyConverter());
        registry.addConverter(getStudyAclToStringConverter());
        registry.addConverter(getIdToStudyAclConverter());
        registry.addConverter(getStringToStudyAclConverter());
        registry.addConverter(getStudyDescrToStringConverter());
        registry.addConverter(getIdToStudyDescrConverter());
        registry.addConverter(getStringToStudyDescrConverter());
        registry.addConverter(getStudyDocumentsToStringConverter());
        registry.addConverter(getIdToStudyDocumentsConverter());
        registry.addConverter(getStringToStudyDocumentsConverter());
        registry.addConverter(getStudyKeywordToStringConverter());
        registry.addConverter(getIdToStudyKeywordConverter());
        registry.addConverter(getStringToStudyKeywordConverter());
        registry.addConverter(getStudyOrgToStringConverter());
        registry.addConverter(getIdToStudyOrgConverter());
        registry.addConverter(getStringToStudyOrgConverter());
        registry.addConverter(getStudyOrgAssocToStringConverter());
        registry.addConverter(getIdToStudyOrgAssocConverter());
        registry.addConverter(getStringToStudyOrgAssocConverter());
        registry.addConverter(getStudyPersonToStringConverter());
        registry.addConverter(getIdToStudyPersonConverter());
        registry.addConverter(getStringToStudyPersonConverter());
        registry.addConverter(getStudyPersonAsocToStringConverter());
        registry.addConverter(getIdToStudyPersonAsocConverter());
        registry.addConverter(getStringToStudyPersonAsocConverter());
        registry.addConverter(getStudyPersonAssocToStringConverter());
        registry.addConverter(getIdToStudyPersonAssocConverter());
        registry.addConverter(getStringToStudyPersonAssocConverter());
        registry.addConverter(getSuffixToStringConverter());
        registry.addConverter(getIdToSuffixConverter());
        registry.addConverter(getStringToSuffixConverter());
        registry.addConverter(getTimeMethTypeToStringConverter());
        registry.addConverter(getIdToTimeMethTypeConverter());
        registry.addConverter(getStringToTimeMethTypeConverter());
        registry.addConverter(getTitleTypeToStringConverter());
        registry.addConverter(getIdToTitleTypeConverter());
        registry.addConverter(getStringToTitleTypeConverter());
        registry.addConverter(getTopicToStringConverter());
        registry.addConverter(getIdToTopicConverter());
        registry.addConverter(getStringToTopicConverter());
        registry.addConverter(getTranslatedTopicToStringConverter());
        registry.addConverter(getIdToTranslatedTopicConverter());
        registry.addConverter(getStringToTranslatedTopicConverter());
        registry.addConverter(getUnitAnalysisToStringConverter());
        registry.addConverter(getIdToUnitAnalysisConverter());
        registry.addConverter(getStringToUnitAnalysisConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
        registry.addConverter(getUserAuthLogToStringConverter());
        registry.addConverter(getIdToUserAuthLogConverter());
        registry.addConverter(getStringToUserAuthLogConverter());
        registry.addConverter(getUserMessageToStringConverter());
        registry.addConverter(getIdToUserMessageConverter());
        registry.addConverter(getStringToUserMessageConverter());
        registry.addConverter(getUserProfileToStringConverter());
        registry.addConverter(getIdToUserProfileConverter());
        registry.addConverter(getStringToUserProfileConverter());
        registry.addConverter(getUserSettingToStringConverter());
        registry.addConverter(getIdToUserSettingConverter());
        registry.addConverter(getStringToUserSettingConverter());
        registry.addConverter(getUserSettingGroupToStringConverter());
        registry.addConverter(getIdToUserSettingGroupConverter());
        registry.addConverter(getStringToUserSettingGroupConverter());
        registry.addConverter(getUserSettingValueToStringConverter());
        registry.addConverter(getIdToUserSettingValueConverter());
        registry.addConverter(getStringToUserSettingValueConverter());
        registry.addConverter(getValueToStringConverter());
        registry.addConverter(getIdToValueConverter());
        registry.addConverter(getStringToValueConverter());
        registry.addConverter(getVargroupToStringConverter());
        registry.addConverter(getIdToVargroupConverter());
        registry.addConverter(getStringToVargroupConverter());
        registry.addConverter(getVariableToStringConverter());
        registry.addConverter(getIdToVariableConverter());
        registry.addConverter(getStringToVariableConverter());
        registry.addConverter(getJsonToInstancePersonPKConverter());
        registry.addConverter(getInstancePersonPKToJsonConverter());
        registry.addConverter(getJsonToPersonEmailPKConverter());
        registry.addConverter(getPersonEmailPKToJsonConverter());
        registry.addConverter(getJsonToUserAuthLogPKConverter());
        registry.addConverter(getUserAuthLogPKToJsonConverter());
        registry.addConverter(getJsonToFormEditedNumberVarPKConverter());
        registry.addConverter(getFormEditedNumberVarPKToJsonConverter());
        registry.addConverter(getJsonToInstanceAclPKConverter());
        registry.addConverter(getInstanceAclPKToJsonConverter());
        registry.addConverter(getJsonToFilePropertyNameValuePKConverter());
        registry.addConverter(getFilePropertyNameValuePKToJsonConverter());
        registry.addConverter(getJsonToOrgAddressPKConverter());
        registry.addConverter(getOrgAddressPKToJsonConverter());
        registry.addConverter(getJsonToOrgPhonePKConverter());
        registry.addConverter(getOrgPhonePKToJsonConverter());
        registry.addConverter(getJsonToFormSelectionVarPKConverter());
        registry.addConverter(getFormSelectionVarPKToJsonConverter());
        registry.addConverter(getJsonToInstanceOrgPKConverter());
        registry.addConverter(getInstanceOrgPKToJsonConverter());
        registry.addConverter(getJsonToOrgEmailPKConverter());
        registry.addConverter(getOrgEmailPKToJsonConverter());
        registry.addConverter(getJsonToCmsFilePropertyNameValuePKConverter());
        registry.addConverter(getCmsFilePropertyNameValuePKToJsonConverter());
        registry.addConverter(getJsonToCatalogAclPKConverter());
        registry.addConverter(getCatalogAclPKToJsonConverter());
        registry.addConverter(getJsonToPersonInternetPKConverter());
        registry.addConverter(getPersonInternetPKToJsonConverter());
        registry.addConverter(getJsonToOrgRelationsPKConverter());
        registry.addConverter(getOrgRelationsPKToJsonConverter());
        registry.addConverter(getJsonToStudyOrgPKConverter());
        registry.addConverter(getStudyOrgPKToJsonConverter());
        registry.addConverter(getJsonToStudyAclPKConverter());
        registry.addConverter(getStudyAclPKToJsonConverter());
        registry.addConverter(getJsonToPersonPhonePKConverter());
        registry.addConverter(getPersonPhonePKToJsonConverter());
        registry.addConverter(getJsonToOrgInternetPKConverter());
        registry.addConverter(getOrgInternetPKToJsonConverter());
        registry.addConverter(getJsonToSelectionVariableItemPKConverter());
        registry.addConverter(getSelectionVariableItemPKToJsonConverter());
        registry.addConverter(getJsonToFileAclPKConverter());
        registry.addConverter(getFileAclPKToJsonConverter());
        registry.addConverter(getJsonToTranslatedTopicPKConverter());
        registry.addConverter(getTranslatedTopicPKToJsonConverter());
        registry.addConverter(getJsonToInstanceDescrPKConverter());
        registry.addConverter(getInstanceDescrPKToJsonConverter());
        registry.addConverter(getJsonToStudyKeywordPKConverter());
        registry.addConverter(getStudyKeywordPKToJsonConverter());
        registry.addConverter(getJsonToStudyDocumentsPKConverter());
        registry.addConverter(getStudyDocumentsPKToJsonConverter());
        registry.addConverter(getJsonToStudyDescrPKConverter());
        registry.addConverter(getStudyDescrPKToJsonConverter());
        registry.addConverter(getJsonToInstanceKeywordPKConverter());
        registry.addConverter(getInstanceKeywordPKToJsonConverter());
        registry.addConverter(getJsonToPersonAddressPKConverter());
        registry.addConverter(getPersonAddressPKToJsonConverter());
        registry.addConverter(getJsonToPersonOrgPKConverter());
        registry.addConverter(getPersonOrgPKToJsonConverter());
        registry.addConverter(getJsonToUserSettingValuePKConverter());
        registry.addConverter(getUserSettingValuePKToJsonConverter());
        registry.addConverter(getJsonToFormEditedTextVarPKConverter());
        registry.addConverter(getFormEditedTextVarPKToJsonConverter());
        registry.addConverter(getJsonToStudyPersonPKConverter());
        registry.addConverter(getStudyPersonPKToJsonConverter());
        registry.addConverter(getJsonToAuditFieldPKConverter());
        registry.addConverter(getAuditFieldPKToJsonConverter());
        registry.addConverter(getJsonToAuditRowIdPKConverter());
        registry.addConverter(getAuditRowIdPKToJsonConverter());
        registry.addConverter(getJsonToCatalogStudyPKConverter());
        registry.addConverter(getCatalogStudyPKToJsonConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
