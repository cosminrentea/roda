----
1. Instalarea IDE si a proiectului
----

1.1. Descarcati Spring Tool Suite (STS) de aici:
http://www.springsource.org/downloads/sts-ggts

Alegeti versiunea bazata pe Eclipse 3.8.2 !!!
Pe website, sectiunea este:
"Milestone Version - Spring Tool Suite 3.2.0.M2 - based on Eclipse Juno 3.8.2"


1.2. Instalati STS, eventual din linia de comanda, cu optiunile default: Next -> ... -> Finish


1.3. Configurare de baza STS.
In fisierul "STS.ini" (in Windows/Linux, in folder-ul radacina al STS; in MacOS X, in folder-ul "STS.app/Contents/MacOS/"),
linia care incepe cu -Xmx (memoria maxima utilizabila de STS) trebuie modificata astfel:
-Xmx1536m

1.5. Instalare Extensii si Plugin-uri in STS.

Porniti STS, eventual din linia de comanda, in folder-ul radacina al instalarii STS:
./STS &

Din Dashboard (Help -> Dashboard), click pe tab-ul "Extensions" (jos, in view), bifati in lista si apoi instalati (buton "Install"):
- "Cloud Foundry Eclipse Integration"
- "Edgewall Trac" 
Restartati STS.

Instalati in STS ultima versiune de Subclipse (cu suport pentru Subversion 1.7), prin meniu Help -> Install New Software:
http://subclipse.tigris.org/update_1.8.x
Selectati si instalati de la acest update-site: "Subclipse" si "SVNKit"
Restartati STS.

Configurati in STS Subclipse pentru a utiliza SVNKIT: 
meniu Window -> Preferences -> Team -> SVN, apoi la "SVN Interface" (mai jos in pagina de optiuni aparuta) se alege Client = "SVNKit (pure Java) SVNKit v1.7...."

(optional) Instalati in STS IDE-ul pentru Perl, prin meniu Help -> Install New Software:
Perl EPIC - http://e-p-i-c.sf.net/updates


1.6. Configurati in STS repository-ul SVN (in perspectiva "SVN Repository Exploring"), folosind ca URL:  svn://fisiere.dyndns.org/roda 
Faceti Checkout din repository pentru:
- modulul "roda" (proiectul Spring din repository)
- modulul "dbwrench2-files" (fisierele dbWrench, scripturile si datele asociate din fisierele CSV).
- [optional] modulul "RODA-Model" (proiectul Perl, pentru scripturile din folderul "script" si fisierele CSV asociate)


1.7 Configurati in STS task repository-ul (de tip Trac)
In view-ul "Task List", buton "Add Repository", tipul "Trac", iar in pasul urmator:
Server URL:    http://fisiere.dyndns.org:8888/roda
Debifare Anonymous
Completare User si Parola
Bifare "Save password"
"Validate Settings"
Finish.

La final, se adauga un Query legat de acest Repository (de exemplu, se completeaza doar un nume de tip "All" si se apasa Finish).

----
2. Configurarea locala a proiectului
----

Conexiunea la baza de date trebuie configurata in
src/main/resources/META-INF/spring/database.properties

Hibernate (de ex. modul de lucru: update / create / create-drop / validate):
src/main/resources/META-INF/persistence.xml

Logging-ul:
src/main/resources/log4j.properties

Conexiunea cu SOLR:
src/main/resources/META-INF/spring/solr.properties

Spring (Beans, properties etc.):
src/main/resources/META-INF/spring/applicationContext.xml

Spring Security:
src/main/resources/META-INF/spring/applicationContext-security.xml

Procesele de build (Maven):
/pom.xml
(aici se pot schimba si parametri: portul folosit de Tomcat la rularea aplicatiei; rularea sau nu a testelor etc.)

----
3. Compilarea proiectului
----

In STS, click-dreapta in view-ul "Package Explorer" pe numele proiectului ("roda"), apoi din meniul aparut: 
Maven -> Update Project -> OK

Deschideti din meniul STS: 
Window -> Open View -> Roo Shell

Click pe buton "Open Roo shell" in view-ul aparut, bifati proiectul ("roda") si apasati OK.
Tastati in Roo shell, atunci cand devine disponibila:
  perform package

----
4. Rularea locala a proiectului
----

4.1. Rularea din STS, pe Server Local
Se trage (drag-and-drop) proiectul "roda" din view-ul "Package Explorer" peste serverul local prezent in view-ul "Servers" (configurat sa foloseasca portul 8181).
Eventual, se (re)porneste serverul.
Daca portul local 8181 era liber, proiectul e disponibil la URL-ul:
http://localhost:8181/roda


4.2. Rularea din STS, pe Cloud Foundry
Se adauga in view-ul "Servers" un nou server remote: click-dreapta, New, Server, Vmware -> Cloud Foundry, Next
Se completeaza cu
Email: roda.devel@gmail.com
Parola: RodaAdor
"Validate Account"
"Next"
Se muta proiectul "roda" din lista "Available" in lista "Configured"
"Next"
In fereastra "Application details", se selecteaza "Application Type" => "Spring"
"Next"
Deployed URL:    roda.cloudfoundry.com
Memory Reservation:    2048 M
"Next"
Se bifeaza serviciul "roda-postgres" din lista aparuta.
"Finish"

Proiectul e disponibil la URL-ul:
http://roda.cloudfoundry.com


4.3. Rularea din linia de comanda, pe Server Local
Din linia de comanda, in folder-ul radacina al proiectului, cu comanda:
  mvn tomcat:run

Daca portul local 8282 era liber, proiectul e disponibil la URL-ul:
http://localhost:8282/roda
