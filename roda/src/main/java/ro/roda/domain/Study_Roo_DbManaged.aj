// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ro.roda.domain;

import java.util.Calendar;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;
import org.springframework.format.annotation.DateTimeFormat;
import ro.roda.domain.CatalogStudy;
import ro.roda.domain.File;
import ro.roda.domain.Instance;
import ro.roda.domain.Rodauser;
import ro.roda.domain.Study;
import ro.roda.domain.StudyAcl;
import ro.roda.domain.StudyDescr;
import ro.roda.domain.StudyKeyword;
import ro.roda.domain.StudyOrg;
import ro.roda.domain.StudyPerson;
import ro.roda.domain.Topic;

privileged aspect Study_Roo_DbManaged {
    
    @ManyToMany
    @JoinTable(name = "study_topic", joinColumns = { @JoinColumn(name = "study_id", nullable = false) }, inverseJoinColumns = { @JoinColumn(name = "topic_id", nullable = false) })
    private Set<Topic> Study.topics;
    
    @ManyToMany(mappedBy = "studies1")
    private Set<File> Study.files1;
    
    @OneToMany(mappedBy = "studyId")
    private Set<CatalogStudy> Study.catalogStudies;
    
    @OneToMany(mappedBy = "studyId")
    private Set<Instance> Study.instances;
    
    @OneToMany(mappedBy = "studyId")
    private Set<StudyAcl> Study.studyAcls;
    
    @OneToMany(mappedBy = "studyId")
    private Set<StudyDescr> Study.studyDescrs;
    
    @OneToMany(mappedBy = "studyId")
    private Set<StudyKeyword> Study.studyKeywords;
    
    @OneToMany(mappedBy = "studyId")
    private Set<StudyOrg> Study.studyOrgs;
    
    @OneToMany(mappedBy = "studyId")
    private Set<StudyPerson> Study.studypeople;
    
    @ManyToOne
    @JoinColumn(name = "added_by", referencedColumnName = "id", nullable = false)
    private Rodauser Study.addedBy;
    
    @Column(name = "datestart", columnDefinition = "timestamp")
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar Study.datestart;
    
    @Column(name = "dateend", columnDefinition = "timestamp")
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar Study.dateend;
    
    @Column(name = "insertion_status", columnDefinition = "int4")
    @NotNull
    private Integer Study.insertionStatus;
    
    @Column(name = "added", columnDefinition = "timestamp")
    @NotNull
    @Temporal(TemporalType.TIMESTAMP)
    @DateTimeFormat(style = "MM")
    private Calendar Study.added;
    
    @Column(name = "can_digitize", columnDefinition = "bool")
    @NotNull
    private boolean Study.canDigitize;
    
    @Column(name = "can_use_anonymous", columnDefinition = "bool")
    @NotNull
    private boolean Study.canUseAnonymous;
    
    public Set<Topic> Study.getTopics() {
        return topics;
    }
    
    public void Study.setTopics(Set<Topic> topics) {
        this.topics = topics;
    }
    
    public Set<File> Study.getFiles1() {
        return files1;
    }
    
    public void Study.setFiles1(Set<File> files1) {
        this.files1 = files1;
    }
    
    public Set<CatalogStudy> Study.getCatalogStudies() {
        return catalogStudies;
    }
    
    public void Study.setCatalogStudies(Set<CatalogStudy> catalogStudies) {
        this.catalogStudies = catalogStudies;
    }
    
    public Set<Instance> Study.getInstances() {
        return instances;
    }
    
    public void Study.setInstances(Set<Instance> instances) {
        this.instances = instances;
    }
    
    public Set<StudyAcl> Study.getStudyAcls() {
        return studyAcls;
    }
    
    public void Study.setStudyAcls(Set<StudyAcl> studyAcls) {
        this.studyAcls = studyAcls;
    }
    
    public Set<StudyDescr> Study.getStudyDescrs() {
        return studyDescrs;
    }
    
    public void Study.setStudyDescrs(Set<StudyDescr> studyDescrs) {
        this.studyDescrs = studyDescrs;
    }
    
    public Set<StudyKeyword> Study.getStudyKeywords() {
        return studyKeywords;
    }
    
    public void Study.setStudyKeywords(Set<StudyKeyword> studyKeywords) {
        this.studyKeywords = studyKeywords;
    }
    
    public Set<StudyOrg> Study.getStudyOrgs() {
        return studyOrgs;
    }
    
    public void Study.setStudyOrgs(Set<StudyOrg> studyOrgs) {
        this.studyOrgs = studyOrgs;
    }
    
    public Set<StudyPerson> Study.getStudypeople() {
        return studypeople;
    }
    
    public void Study.setStudypeople(Set<StudyPerson> studypeople) {
        this.studypeople = studypeople;
    }
    
    public Rodauser Study.getAddedBy() {
        return addedBy;
    }
    
    public void Study.setAddedBy(Rodauser addedBy) {
        this.addedBy = addedBy;
    }
    
    public Calendar Study.getDatestart() {
        return datestart;
    }
    
    public void Study.setDatestart(Calendar datestart) {
        this.datestart = datestart;
    }
    
    public Calendar Study.getDateend() {
        return dateend;
    }
    
    public void Study.setDateend(Calendar dateend) {
        this.dateend = dateend;
    }
    
    public Integer Study.getInsertionStatus() {
        return insertionStatus;
    }
    
    public void Study.setInsertionStatus(Integer insertionStatus) {
        this.insertionStatus = insertionStatus;
    }
    
    public Calendar Study.getAdded() {
        return added;
    }
    
    public void Study.setAdded(Calendar added) {
        this.added = added;
    }
    
    public boolean Study.isCanDigitize() {
        return canDigitize;
    }
    
    public void Study.setCanDigitize(boolean canDigitize) {
        this.canDigitize = canDigitize;
    }
    
    public boolean Study.isCanUseAnonymous() {
        return canUseAnonymous;
    }
    
    public void Study.setCanUseAnonymous(boolean canUseAnonymous) {
        this.canUseAnonymous = canUseAnonymous;
    }
    
}
