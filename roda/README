----
0. Instalarea si configurarea - servicii si software aditional
----
Se instaleaza Postgresql 9 ca server pe statia locala (preferabil, pornit automat ca serviciu la bootare).
In MacOSX, se instaleaza/ruleaza Postgres.app (descarcat de la http://postgresapp.com )

In MacOSX e necesar sa se instaleze anterior MacPorts.
Apoi, se ruleaza comenzile:
	sudo port install perl5 R pgadmin3 p5.12-test-www-selenium
	sudo R CMD javareconf

Se instaleaza rJava, cu urmatoarea comanda data in shell-ul R :
	R
	install.packages('rJava')
	
Se instaleaza dbWrench2.

[Optional] Se instaleaza VMC, pentru configurarea CloudFoundry:
	sudo port install gem
	sudo gem install vmc
	
----
1. Instalarea IDE si a proiectului
----

1.1. Instalare Maven in sistemul de operare

In Ubuntu:	
	sudo apt-get install maven

In MacOSX, cu macports instalat:
	sudo port install maven3

1.2. Descarcati Spring Tool Suite (STS).
URL direct:	http://www.springsource.org/downloads/sts-ggts

Alegeti versiunea bazata pe Eclipse 3.8.2 !!!
Pe website, sectiunea este intitulata:
"Milestone Version - Spring Tool Suite 3.2.0.RELEASE - based on Eclipse Juno 3.8.2"

1.2. Instalati STS, eventual din linia de comanda, cu optiunile default: Next -> ... -> Finish

1.4. Configurare de baza STS (inainte de pornire)
In fisierul "STS.ini" (in Windows/Linux, acesta este in folder-ul radacina al STS; in MacOS X, in folder-ul "STS.app/Contents/MacOS/"),
se modifica memoria maxima utilizabila de STS.
Linia care incepe cu -Xmx (memoria maxima utilizabila de STS) trebuie modificata astfel:
	-Xmx3072m

Daca JVM este pe 32 biti 
(daca in linia de comanda:  
	java -version
cuprinde in rezultat "x86" sau "32 bit"),
atunci in "STS.ini" trebuie scris de ex.:
	-Xmx1536m

1.5. Instalare Extensii si Plugin-uri in STS.

Porniti STS, eventual din linia de comanda, in folder-ul radacina al instalarii STS:
	./STS &

Din Dashboard (Help -> Dashboard), click pe tab-ul "Extensions" (jos, in view), bifati in lista si apoi instalati (buton "Install"):
- "Cloud Foundry Eclipse Integration"
- "Edgewall Trac" 
Restartati STS.

Instalati in STS ultima versiune de Subclipse (cu suport pentru Subversion 1.7), prin meniu Help -> Install New Software:
	http://subclipse.tigris.org/update_1.8.x
Selectati si instalati de la acest update-site: "Subclipse" si "SVNKit"
Restartati STS.

Configurati in STS Subclipse pentru a utiliza SVNKIT: 
meniu Window -> Preferences -> Team -> SVN, 
apoi la "SVN Interface" (mai jos in pagina de optiuni aparuta) se alege Client = "SVNKit (pure Java) SVNKit v1.7...."

[optional] Instalati in STS pachetul de tip IDE pentru Perl, prin meniu Help -> Install New Software:
Perl EPIC, URL:
	http://e-p-i-c.sf.net/updates/testing


1.6. In STS, adaugati repository-ul SVN (in perspectiva "SVN Repository Exploring"), folosind ca URL:  svn://fisiere.dyndns.org/roda 
Faceti Checkout din repository pentru:
- modulul "roda" (proiectul Spring din repository)
- modulul "dbwrench2-files" (fisierele dbWrench, scripturile si datele asociate din fisierele CSV).
- [optional] modulul "RODA-Model" (proiectul continand modelul Perl)


1.7  in STS, configurati task repository-ul (de tip Trac)
In view-ul "Task List", buton "Add Repository", tipul "Trac", iar in pasul urmator:
Server URL:    http://fisiere.dyndns.org:8888/roda
Debifare Anonymous
Completare User si Parola (specifice)
Bifare "Save password"
"Validate Settings"
"Finish"

La final, se adauga un Query legat de acest Repository (de exemplu, se completeaza doar un nume de tip "All" si se apasa Finish).

----
2. Compilarea pentru prima data a proiectului
----

In linia de comanda, in folderul-radacina al proiectului "roda":
	MAVEN_OPTS="-Xmx1024m -XX:MaxPermSize=256m" mvn -e -X clean package
Toate pachetele necesare se descarca la prima compilare, care poate dura mai mult.

In STS, click-dreapta in view-ul "Package Explorer" pe numele proiectului ("roda"), apoi din meniul aparut: 
Maven -> Update Project -> OK

Se va deschide un view "Roo shell" unde se pot da comenzi Roo referitoare la proiect.

----
3. Configurarea locala
----

Configurarea Serverului Local (in STS)
----
TODO
Se trage (drag-and-drop) proiectul "roda" din view-ul "Package Explorer" peste serverul local prezent in view-ul "Servers" (VMware vFabric tc Server ...).


Configurarea serverului Postgresql local
----
Folosind pentru conectare in linia de comanda
	psql -h localhost
se dau comenzile:
	CREATE USER roda;
	CREATE DATABASE roda OWNER roda ENCODING 'UTF8';


Fisierele de configurare ale proiectului
----
Conexiunea la baza de date trebuie configurata in
	src/main/resources/META-INF/spring/database.properties

Hibernate (de ex. modul de lucru: update / create / create-drop / validate):
	src/main/resources/META-INF/persistence.xml

Logging-ul:
	src/main/resources/log4j.properties

Spring (Beans, properties etc.):
	src/main/resources/META-INF/spring/applicationContext.xml

Spring Security Authentication:
	src/main/resources/META-INF/spring/applicationContext-security.xml

Spring Security ACL:
	src/main/resources/META-INF/spring/applicationContext-acl.xml

Conexiunea cu SOLR:
	src/main/resources/META-INF/spring/solr.properties

Procedurile de build (Maven):
	/pom.xml
	(aici se pot schimba si parametri: portul folosit de Tomcat la rularea aplicatiei; rularea sau nu a testelor etc.)


----
4. Rularea locala a proiectului
----

4.1. Rularea din STS, pe Server Local
Se (re)porneste serverul folosind butoanele din view-ul "Servers".
Daca portul local 8080 era liber (se poate edita dupa dublu-click pe server, proiectul e disponibil la URL-ul:
	http://localhost:8080/roda


4.2. Rularea din linia de comanda, pe un Server Local ad-hoc (tip Tomcat)
Din linia de comanda, in folder-ul radacina al proiectului "roda", cu comanda:
	MAVEN_OPTS="-Xmx1024m -XX:MaxPermSize=256m" mvn tomcat:run

Daca portul local 8080 era liber (portul se poate schimba in "pom.xml"), proiectul e disponibil la URL-ul:
	http://localhost:8080/roda

4.3. Rularea automata a testelor web (Selenium) 
Din linia de comanda, in folder-ul radacina al proiectului "roda", cu comanda:
	MAVEN_OPTS="-Xmx1024m -XX:MaxPermSize=256m" mvn tomcat:run selenium:selenese


4.4. Rularea din STS, pe CloudFoundry (nerecomandat)

!!! ATENTIE !!!
Accesul la acest cont/server este shared (e folosit inclusiv de catre Jenkins), 
pot aparea suprapuneri nedorite intre variante diferite / dezvoltatori diferiti !

Se adauga in view-ul "Servers" un nou server remote: click-dreapta, New, Server, Vmware -> Cloud Foundry, Next
Se completeaza cu
Email: roda.devel@gmail.com
Parola: RodaAdor
"Validate Account"
"Next"
Se muta proiectul "roda" din lista "Available" in lista "Configured"
"Next"
In fereastra "Application details", se selecteaza "Application Type" => "Spring"
"Next"
Deployed URL:    roda.cloudfoundry.com
Memory Reservation:    2048 M
"Next"
Se bifeaza serviciul "roda-postgres" (baza de date Postgres) din lista aparuta.
"Finish"

Proiectul e disponibil online permanent la URL-ul:
	http://roda.cloudfoundry.com
