// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ro.roda;

import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import ro.roda.Internet;
import ro.roda.InternetDataOnDemand;
import ro.roda.service.InternetService;

privileged aspect InternetDataOnDemand_Roo_DataOnDemand {
    
    declare @type: InternetDataOnDemand: @Component;
    
    private Random InternetDataOnDemand.rnd = new SecureRandom();
    
    private List<Internet> InternetDataOnDemand.data;
    
    @Autowired
    InternetService InternetDataOnDemand.internetService;
    
    public Internet InternetDataOnDemand.getNewTransientInternet(int index) {
        Internet obj = new Internet();
        setInternet(obj, index);
        setInternetType(obj, index);
        return obj;
    }
    
    public void InternetDataOnDemand.setInternet(Internet obj, int index) {
        String internet = "internet_" + index;
        obj.setInternet(internet);
    }
    
    public void InternetDataOnDemand.setInternetType(Internet obj, int index) {
        String internetType = "internetType_" + index;
        if (internetType.length() > 50) {
            internetType = internetType.substring(0, 50);
        }
        obj.setInternetType(internetType);
    }
    
    public Internet InternetDataOnDemand.getSpecificInternet(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Internet obj = data.get(index);
        Integer id = obj.getId();
        return internetService.findInternet(id);
    }
    
    public Internet InternetDataOnDemand.getRandomInternet() {
        init();
        Internet obj = data.get(rnd.nextInt(data.size()));
        Integer id = obj.getId();
        return internetService.findInternet(id);
    }
    
    public boolean InternetDataOnDemand.modifyInternet(Internet obj) {
        return false;
    }
    
    public void InternetDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = internetService.findInternetEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Internet' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Internet>();
        for (int i = 0; i < 10; i++) {
            Internet obj = getNewTransientInternet(i);
            try {
                internetService.saveInternet(obj);
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
